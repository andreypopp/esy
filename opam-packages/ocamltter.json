{
  "versions": {
    "2.0.0": {
      "name": "@opam-alpha/ocamltter",
      "version": "2.0.0",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "*",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json": "=1.0.0",
        "@opam-alpha/tiny_json_conv": "=1.2.0",
        "@opam-alpha/spotlib": " >= 2.1.1  <= 2.1.2"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "2.0.0",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/2.0.0.tar.gz",
        "checksum": "0609279941b183dc7e83631cb9156d28",
        "files": []
      }
    },
    "2.0.1": {
      "name": "@opam-alpha/ocamltter",
      "version": "2.0.1",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json_conv": " >= 1.3.0",
        "@opam-alpha/spotlib": " >= 2.1.1  <= 2.1.2"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "2.0.1",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/2.0.1.tar.gz",
        "checksum": "47dcd243bcedf8bb4a2d96f0d86826c2",
        "files": []
      }
    },
    "2.1.0": {
      "name": "@opam-alpha/ocamltter",
      "version": "2.1.0",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json_conv": "=1.4.0",
        "@opam-alpha/spotlib": "=2.2.0"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "2.1.0",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/2.1.0.tar.gz",
        "checksum": "6ad11d746adbe730080e69d913585707",
        "files": [
          {
            "name": "cleanup.patch",
            "content": "diff --git a/_oasis b/_oasis\nindex 3197125..1fc7b53 100644\n--- a/_oasis\n+++ b/_oasis\n@@ -9,6 +9,6 @@ BuildType:    Custom (0.2)\n InstallType:    Custom (0.2)\n XCustomBuild: yes no | omake --install; PREFIX=$prefix omake\n XCustomInstall: PREFIX=$prefix omake install\n-XCustomUninstall: PREFIX=$prefix omake uninstall\n+XCustomUninstall: yes no | omake --install; PREFIX=$prefix omake uninstall\n XCustomBuildClean: PREFIX=$prefix omake clean\n BuildTools: omake\ndiff --git a/setup.ml b/setup.ml\nindex 6152a68..402be2f 100644\n--- a/setup.ml\n+++ b/setup.ml\n@@ -1,48 +1,58 @@\n (* setup.ml generated for the first time by OASIS v0.3.0 *)\n \n (* OASIS_START *)\n-(* DO NOT EDIT (digest: 96c54ae40aba435fd1fd9372631873d1) *)\n+(* DO NOT EDIT (digest: 8c21f4cc3c6c83143ad3abd2a73b1129) *)\n (*\n-   Regenerated by OASIS v0.3.0\n+   Regenerated by OASIS v0.4.6\n    Visit http://oasis.forge.ocamlcore.org for more information and\n    documentation about functions used in this file.\n *)\n module OASISGettext = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISGettext.ml\" *)\n+(* # 22 \"src/oasis/OASISGettext.ml\" *)\n+\n \n   let ns_ str =\n     str\n \n+\n   let s_ str =\n     str\n \n-  let f_ (str : ('a, 'b, 'c, 'd) format4) =\n+\n+  let f_ (str: ('a, 'b, 'c, 'd) format4) =\n     str\n \n+\n   let fn_ fmt1 fmt2 n =\n     if n = 1 then\n       fmt1^^\"\"\n     else\n       fmt2^^\"\"\n \n+\n   let init =\n     []\n \n+\n end\n \n module OASISContext = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISContext.ml\" *)\n+(* # 22 \"src/oasis/OASISContext.ml\" *)\n+\n \n   open OASISGettext\n \n+\n   type level =\n     [ `Debug\n     | `Info\n     | `Warning\n     | `Error]\n \n+\n   type t =\n     {\n+      (* TODO: replace this by a proplist. *)\n       quiet:                 bool;\n       info:                  bool;\n       debug:                 bool;\n@@ -51,6 +61,7 @@ module OASISContext = struct\n       printf:                level -> string -> unit;\n     }\n \n+\n   let printf lvl str =\n     let beg =\n       match lvl with\n@@ -61,6 +72,7 @@ module OASISContext = struct\n     in\n       prerr_endline (beg^str)\n \n+\n   let default =\n     ref\n       {\n@@ -72,37 +84,50 @@ module OASISContext = struct\n         printf                = printf;\n       }\n \n+\n   let quiet =\n     {!default with quiet = true}\n \n \n-  let args () =\n+  let fspecs () =\n+    (* TODO: don't act on default. *)\n+    let ignore_plugins = ref false in\n     [\"-quiet\",\n      Arg.Unit (fun () -> default := {!default with quiet = true}),\n-     (s_ \" Run quietly\");\n+     s_ \" Run quietly\";\n \n      \"-info\",\n      Arg.Unit (fun () -> default := {!default with info = true}),\n-     (s_ \" Display information message\");\n+     s_ \" Display information message\";\n \n \n      \"-debug\",\n      Arg.Unit (fun () -> default := {!default with debug = true}),\n-     (s_ \" Output debug message\")]\n+     s_ \" Output debug message\";\n+\n+     \"-ignore-plugins\",\n+     Arg.Set ignore_plugins,\n+     s_ \" Ignore plugin's field.\";\n+\n+     \"-C\",\n+     (* TODO: remove this chdir. *)\n+     Arg.String (fun str -> Sys.chdir str),\n+     s_ \"dir Change directory before running.\"],\n+    fun () -> {!default with ignore_plugins = !ignore_plugins}\n end\n \n module OASISString = struct\n-(* # 1 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISString.ml\" *)\n-\n+(* # 22 \"src/oasis/OASISString.ml\" *)\n \n \n   (** Various string utilities.\n-     \n+\n       Mostly inspired by extlib and batteries ExtString and BatString libraries.\n \n       @author Sylvain Le Gall\n     *)\n \n+\n   let nsplitf str f =\n     if str = \"\" then\n       []\n@@ -123,16 +148,18 @@ module OASISString = struct\n         push ();\n         List.rev !lst\n \n+\n   (** [nsplit c s] Split the string [s] at char [c]. It doesn't include the\n       separator.\n     *)\n   let nsplit str c =\n     nsplitf str ((=) c)\n \n+\n   let find ~what ?(offset=0) str =\n     let what_idx = ref 0 in\n-    let str_idx = ref offset in \n-      while !str_idx < String.length str && \n+    let str_idx = ref offset in\n+      while !str_idx < String.length str &&\n             !what_idx < String.length what do\n         if str.[!str_idx] = what.[!what_idx] then\n           incr what_idx\n@@ -142,16 +169,18 @@ module OASISString = struct\n       done;\n       if !what_idx <> String.length what then\n         raise Not_found\n-      else \n+      else\n         !str_idx - !what_idx\n \n-  let sub_start str len = \n+\n+  let sub_start str len =\n     let str_len = String.length str in\n     if len >= str_len then\n       \"\"\n     else\n       String.sub str len (str_len - len)\n \n+\n   let sub_end ?(offset=0) str len =\n     let str_len = String.length str in\n     if len >= str_len then\n@@ -159,12 +188,13 @@ module OASISString = struct\n     else\n       String.sub str 0 (str_len - len)\n \n+\n   let starts_with ~what ?(offset=0) str =\n     let what_idx = ref 0 in\n     let str_idx = ref offset in\n     let ok = ref true in\n       while !ok &&\n-            !str_idx < String.length str && \n+            !str_idx < String.length str &&\n             !what_idx < String.length what do\n         if str.[!str_idx] = what.[!what_idx] then\n           incr what_idx\n@@ -174,21 +204,23 @@ module OASISString = struct\n       done;\n       if !what_idx = String.length what then\n         true\n-      else \n+      else\n         false\n \n+\n   let strip_starts_with ~what str =\n     if starts_with ~what str then\n       sub_start str (String.length what)\n     else\n       raise Not_found\n \n+\n   let ends_with ~what ?(offset=0) str =\n     let what_idx = ref ((String.length what) - 1) in\n     let str_idx = ref ((String.length str) - 1) in\n     let ok = ref true in\n       while !ok &&\n-            offset <= !str_idx && \n+            offset <= !str_idx &&\n             0 <= !what_idx do\n         if str.[!str_idx] = what.[!what_idx] then\n           decr what_idx\n@@ -198,65 +230,137 @@ module OASISString = struct\n       done;\n       if !what_idx = -1 then\n         true\n-      else \n+      else\n         false\n \n+\n   let strip_ends_with ~what str =\n     if ends_with ~what str then\n       sub_end str (String.length what)\n     else\n       raise Not_found\n \n+\n   let replace_chars f s =\n-    let buf = String.make (String.length s) 'X' in\n-      for i = 0 to String.length s - 1 do\n-        buf.[i] <- f s.[i]\n-      done;\n-      buf\n+    let buf = Buffer.create (String.length s) in\n+    String.iter (fun c -> Buffer.add_char buf (f c)) s;\n+    Buffer.contents buf\n+\n+  let lowercase_ascii =\n+    replace_chars\n+      (fun c ->\n+         if (c >= 'A' && c <= 'Z') then\n+           Char.chr (Char.code c + 32)\n+         else\n+           c)\n+\n+  let uncapitalize_ascii s =\n+    if s <> \"\" then\n+      (lowercase_ascii (String.sub s 0 1)) ^ (String.sub s 1 ((String.length s) - 1))\n+    else\n+      s\n+\n+  let uppercase_ascii =\n+    replace_chars\n+      (fun c ->\n+         if (c >= 'a' && c <= 'z') then\n+           Char.chr (Char.code c - 32)\n+         else\n+           c)\n+\n+  let capitalize_ascii s =\n+    if s <> \"\" then\n+      (uppercase_ascii (String.sub s 0 1)) ^ (String.sub s 1 ((String.length s) - 1))\n+    else\n+      s\n \n end\n \n module OASISUtils = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISUtils.ml\" *)\n+(* # 22 \"src/oasis/OASISUtils.ml\" *)\n+\n \n   open OASISGettext\n \n-  module MapString = Map.Make(String)\n \n-  let map_string_of_assoc assoc =\n-    List.fold_left\n-      (fun acc (k, v) -> MapString.add k v acc)\n-      MapString.empty\n-      assoc\n+  module MapExt =\n+  struct\n+    module type S =\n+    sig\n+      include Map.S\n+      val add_list: 'a t -> (key * 'a) list -> 'a t\n+      val of_list: (key * 'a) list -> 'a t\n+      val to_list: 'a t -> (key * 'a) list\n+    end\n+\n+    module Make (Ord: Map.OrderedType) =\n+    struct\n+      include Map.Make(Ord)\n+\n+      let rec add_list t =\n+        function\n+          | (k, v) :: tl -> add_list (add k v t) tl\n+          | [] -> t\n \n-  module SetString = Set.Make(String)\n+      let of_list lst = add_list empty lst\n+\n+      let to_list t = fold (fun k v acc -> (k, v) :: acc) t []\n+    end\n+  end\n+\n+\n+  module MapString = MapExt.Make(String)\n \n-  let set_string_add_list st lst =\n-    List.fold_left\n-      (fun acc e -> SetString.add e acc)\n-      st\n-      lst\n \n-  let set_string_of_list =\n-    set_string_add_list\n-      SetString.empty\n+  module SetExt  =\n+  struct\n+    module type S =\n+    sig\n+      include Set.S\n+      val add_list: t -> elt list -> t\n+      val of_list: elt list -> t\n+      val to_list: t -> elt list\n+    end\n+\n+    module Make (Ord: Set.OrderedType) =\n+    struct\n+      include Set.Make(Ord)\n+\n+      let rec add_list t =\n+        function\n+          | e :: tl -> add_list (add e t) tl\n+          | [] -> t\n+\n+      let of_list lst = add_list empty lst\n+\n+      let to_list = elements\n+    end\n+  end\n+\n+\n+  module SetString = SetExt.Make(String)\n \n \n   let compare_csl s1 s2 =\n-    String.compare (String.lowercase s1) (String.lowercase s2)\n+    String.compare (OASISString.lowercase_ascii s1) (OASISString.lowercase_ascii s2)\n+\n \n   module HashStringCsl =\n     Hashtbl.Make\n       (struct\n          type t = string\n+         let equal s1 s2 = (compare_csl s1 s2) = 0\n+         let hash s = Hashtbl.hash (OASISString.lowercase_ascii s)\n+       end)\n \n-         let equal s1 s2 =\n-             (String.lowercase s1) = (String.lowercase s2)\n-\n-         let hash s =\n-           Hashtbl.hash (String.lowercase s)\n+  module SetStringCsl =\n+    SetExt.Make\n+      (struct\n+         type t = string\n+         let compare = compare_csl\n        end)\n \n+\n   let varname_of_string ?(hyphen='_') s =\n     if String.length s = 0 then\n       begin\n@@ -284,9 +388,10 @@ module OASISUtils = struct\n           else\n             buf\n         in\n-          String.lowercase buf\n+          OASISString.lowercase_ascii buf\n       end\n \n+\n   let varname_concat ?(hyphen='_') p s =\n     let what = String.make 1 hyphen in\n     let p =\n@@ -307,42 +412,49 @@ module OASISUtils = struct\n   let is_varname str =\n     str = varname_of_string str\n \n+\n   let failwithf fmt = Printf.ksprintf failwith fmt\n \n+\n end\n \n module PropList = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/PropList.ml\" *)\n+(* # 22 \"src/oasis/PropList.ml\" *)\n+\n \n   open OASISGettext\n \n+\n   type name = string\n \n+\n   exception Not_set of name * string option\n   exception No_printer of name\n   exception Unknown_field of name * name\n \n+\n   let () =\n     Printexc.register_printer\n       (function\n          | Not_set (nm, Some rsn) ->\n-             Some \n+             Some\n                (Printf.sprintf (f_ \"Field '%s' is not set: %s\") nm rsn)\n          | Not_set (nm, None) ->\n-             Some \n+             Some\n                (Printf.sprintf (f_ \"Field '%s' is not set\") nm)\n          | No_printer nm ->\n              Some\n                (Printf.sprintf (f_ \"No default printer for value %s\") nm)\n          | Unknown_field (nm, schm) ->\n-             Some \n-               (Printf.sprintf (f_ \"Field %s is not defined in schema %s\") nm schm)\n+             Some\n+               (Printf.sprintf\n+                  (f_ \"Field %s is not defined in schema %s\") nm schm)\n          | _ ->\n              None)\n \n+\n   module Data =\n   struct\n-\n     type t =\n         (name, unit -> unit) Hashtbl.t\n \n@@ -352,12 +464,13 @@ module PropList = struct\n     let clear t =\n       Hashtbl.clear t\n \n-(* # 71 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/PropList.ml\" *)\n+\n+(* # 78 \"src/oasis/PropList.ml\" *)\n   end\n \n+\n   module Schema =\n   struct\n-\n     type ('ctxt, 'extra) value =\n         {\n           get:   Data.t -> string;\n@@ -381,7 +494,7 @@ module PropList = struct\n         order     = Queue.create ();\n         name_norm =\n           (if case_insensitive then\n-             String.lowercase\n+             OASISString.lowercase_ascii\n            else\n              fun s -> s);\n       }\n@@ -445,9 +558,9 @@ module PropList = struct\n       t.name\n   end\n \n+\n   module Field =\n   struct\n-\n     type ('ctxt, 'value, 'extra) t =\n         {\n           set:    Data.t -> ?context:'ctxt -> 'value -> unit;\n@@ -577,28 +690,27 @@ module PropList = struct\n \n     let fgets data t =\n       t.gets data\n-\n   end\n \n+\n   module FieldRO =\n   struct\n-\n     let create ?schema ?name ?parse ?print ?default ?update ?help extra =\n       let fld =\n         Field.create ?schema ?name ?parse ?print ?default ?update ?help extra\n       in\n         fun data -> Field.fget data fld\n-\n   end\n end\n \n module OASISMessage = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISMessage.ml\" *)\n+(* # 22 \"src/oasis/OASISMessage.ml\" *)\n \n \n   open OASISGettext\n   open OASISContext\n \n+\n   let generic_message ~ctxt lvl fmt =\n     let cond =\n       if ctxt.quiet then\n@@ -617,30 +729,39 @@ module OASISMessage = struct\n              end)\n         fmt\n \n+\n   let debug ~ctxt fmt =\n     generic_message ~ctxt `Debug fmt\n \n+\n   let info ~ctxt fmt =\n     generic_message ~ctxt `Info fmt\n \n+\n   let warning ~ctxt fmt =\n     generic_message ~ctxt `Warning fmt\n \n+\n   let error ~ctxt fmt =\n     generic_message ~ctxt `Error fmt\n \n end\n \n module OASISVersion = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISVersion.ml\" *)\n+(* # 22 \"src/oasis/OASISVersion.ml\" *)\n+\n \n   open OASISGettext\n \n \n \n+\n+\n   type s = string\n \n-  type t = string \n+\n+  type t = string\n+\n \n   type comparator =\n     | VGreater of t\n@@ -650,20 +771,24 @@ module OASISVersion = struct\n     | VLesserEqual of t\n     | VOr of  comparator * comparator\n     | VAnd of comparator * comparator\n-    \n+\n+\n \n   (* Range of allowed characters *)\n   let is_digit c =\n     '0' <= c && c <= '9'\n \n+\n   let is_alpha c =\n     ('a' <= c && c <= 'z') || ('A' <= c && c <= 'Z')\n \n+\n   let is_special =\n     function\n       | '.' | '+' | '-' | '~' -> true\n       | _ -> false\n \n+\n   let rec version_compare v1 v2 =\n     if v1 <> \"\" || v2 <> \"\" then\n       begin\n@@ -707,11 +832,11 @@ module OASISVersion = struct\n               while !p < String.length v && is_digit v.[!p] do\n                 incr p\n               done;\n-              let substr = \n+              let substr =\n                 String.sub v !p ((String.length v) - !p)\n-              in \n-              let res = \n-                match String.sub v start_p (!p - start_p) with \n+              in\n+              let res =\n+                match String.sub v start_p (!p - start_p) with\n                   | \"\" -> 0\n                   | s -> int_of_string s\n               in\n@@ -747,8 +872,14 @@ module OASISVersion = struct\n \n   let version_of_string str = str\n \n+\n   let string_of_version t = t\n \n+\n+  let version_compare_string s1 s2 =\n+    version_compare (version_of_string s1) (version_of_string s2)\n+\n+\n   let chop t =\n     try\n       let pos =\n@@ -758,6 +889,7 @@ module OASISVersion = struct\n     with Not_found ->\n       t\n \n+\n   let rec comparator_apply v op =\n     match op with\n       | VGreater cv ->\n@@ -775,6 +907,7 @@ module OASISVersion = struct\n       | VAnd (op1, op2) ->\n           (comparator_apply v op1) && (comparator_apply v op2)\n \n+\n   let rec string_of_comparator =\n     function\n       | VGreater v  -> \"> \"^(string_of_version v)\n@@ -787,6 +920,7 @@ module OASISVersion = struct\n       | VAnd (c1, c2) ->\n           (string_of_comparator c1)^\" && \"^(string_of_comparator c2)\n \n+\n   let rec varname_of_comparator =\n     let concat p v =\n       OASISUtils.varname_concat\n@@ -805,13 +939,24 @@ module OASISVersion = struct\n         | VAnd (c1, c2) ->\n             (varname_of_comparator c1)^\"_and_\"^(varname_of_comparator c2)\n \n-  let version_0_3_or_after t =\n-    comparator_apply t (VGreaterEqual (string_of_version \"0.3\"))\n+\n+  let rec comparator_ge v' =\n+    let cmp v = version_compare v v' >= 0 in\n+    function\n+      | VEqual v\n+      | VGreaterEqual v\n+      | VGreater v -> cmp v\n+      | VLesserEqual _\n+      | VLesser _ -> false\n+      | VOr (c1, c2) -> comparator_ge v' c1 || comparator_ge v' c2\n+      | VAnd (c1, c2) -> comparator_ge v' c1 && comparator_ge v' c2\n+\n \n end\n \n module OASISLicense = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISLicense.ml\" *)\n+(* # 22 \"src/oasis/OASISLicense.ml\" *)\n+\n \n   (** License for _oasis fields\n       @author Sylvain Le Gall\n@@ -819,15 +964,20 @@ module OASISLicense = struct\n \n \n \n-  type license = string \n \n-  type license_exception = string \n+\n+  type license = string\n+\n+\n+  type license_exception = string\n+\n \n   type license_version =\n     | Version of OASISVersion.t\n     | VersionOrLater of OASISVersion.t\n     | NoVersion\n-    \n+\n+\n \n   type license_dep_5_unit =\n     {\n@@ -835,31 +985,38 @@ module OASISLicense = struct\n       excption:  license_exception option;\n       version:   license_version;\n     }\n-    \n+\n+\n \n   type license_dep_5 =\n     | DEP5Unit of license_dep_5_unit\n     | DEP5Or of license_dep_5 list\n     | DEP5And of license_dep_5 list\n-    \n+\n \n   type t =\n     | DEP5License of license_dep_5\n     | OtherLicense of string (* URL *)\n-    \n+\n+\n \n end\n \n module OASISExpr = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISExpr.ml\" *)\n+(* # 22 \"src/oasis/OASISExpr.ml\" *)\n+\n+\n \n \n \n   open OASISGettext\n \n-  type test = string \n \n-  type flag = string \n+  type test = string\n+\n+\n+  type flag = string\n+\n \n   type t =\n     | EBool of bool\n@@ -868,9 +1025,11 @@ module OASISExpr = struct\n     | EOr of t * t\n     | EFlag of flag\n     | ETest of test * string\n-    \n \n-  type 'a choices = (t * 'a) list \n+\n+\n+  type 'a choices = (t * 'a) list\n+\n \n   let eval var_get t =\n     let rec eval' =\n@@ -902,6 +1061,7 @@ module OASISExpr = struct\n     in\n       eval' t\n \n+\n   let choose ?printer ?name var_get lst =\n     let rec choose_aux =\n       function\n@@ -938,44 +1098,66 @@ module OASISExpr = struct\n     in\n       choose_aux (List.rev lst)\n \n+\n+end\n+\n+module OASISText = struct\n+(* # 22 \"src/oasis/OASISText.ml\" *)\n+\n+\n+\n+  type elt =\n+    | Para of string\n+    | Verbatim of string\n+    | BlankLine\n+\n+\n+  type t = elt list\n+\n end\n \n module OASISTypes = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISTypes.ml\" *)\n+(* # 22 \"src/oasis/OASISTypes.ml\" *)\n+\n+\n+\n \n \n+  type name          = string\n+  type package_name  = string\n+  type url           = string\n+  type unix_dirname  = string\n+  type unix_filename = string\n+  type host_dirname  = string\n+  type host_filename = string\n+  type prog          = string\n+  type arg           = string\n+  type args          = string list\n+  type command_line  = (prog * arg list)\n \n \n-  type name          = string \n-  type package_name  = string \n-  type url           = string \n-  type unix_dirname  = string \n-  type unix_filename = string \n-  type host_dirname  = string \n-  type host_filename = string \n-  type prog          = string \n-  type arg           = string \n-  type args          = string list \n-  type command_line  = (prog * arg list) \n+  type findlib_name = string\n+  type findlib_full = string\n \n-  type findlib_name = string \n-  type findlib_full = string \n \n   type compiled_object =\n     | Byte\n     | Native\n     | Best\n-    \n+\n+\n \n   type dependency =\n     | FindlibPackage of findlib_full * OASISVersion.comparator option\n     | InternalLibrary of name\n-    \n+\n+\n \n   type tool =\n     | ExternalTool of name\n     | InternalExecutable of name\n-    \n+\n+\n \n   type vcs =\n     | Darcs\n@@ -987,7 +1169,8 @@ module OASISTypes = struct\n     | Arch\n     | Monotone\n     | OtherVCS of url\n-    \n+\n+\n \n   type plugin_kind =\n       [  `Configure\n@@ -998,6 +1181,7 @@ module OASISTypes = struct\n        | `Extra\n       ]\n \n+\n   type plugin_data_purpose =\n       [  `Configure\n        | `Build\n@@ -1012,22 +1196,29 @@ module OASISTypes = struct\n        | `Other of string\n       ]\n \n-  type 'a plugin = 'a * name * OASISVersion.t option \n+\n+  type 'a plugin = 'a * name * OASISVersion.t option\n+\n \n   type all_plugin = plugin_kind plugin\n \n+\n   type plugin_data = (all_plugin * plugin_data_purpose * (unit -> unit)) list\n \n-(* # 102 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISTypes.ml\" *)\n \n-  type 'a conditional = 'a OASISExpr.choices \n+(* # 115 \"src/oasis/OASISTypes.ml\" *)\n+\n+\n+  type 'a conditional = 'a OASISExpr.choices\n+\n \n   type custom =\n       {\n         pre_command:  (command_line option) conditional;\n         post_command: (command_line option) conditional;\n       }\n-      \n+\n+\n \n   type common_section =\n       {\n@@ -1035,7 +1226,8 @@ module OASISTypes = struct\n         cs_data: PropList.Data.t;\n         cs_plugin_data: plugin_data;\n       }\n-      \n+\n+\n \n   type build_section =\n       {\n@@ -1054,7 +1246,8 @@ module OASISTypes = struct\n         bs_byteopt:         args conditional;\n         bs_nativeopt:       args conditional;\n       }\n-      \n+\n+\n \n   type library =\n       {\n@@ -1064,19 +1257,29 @@ module OASISTypes = struct\n         lib_findlib_parent:     findlib_name option;\n         lib_findlib_name:       findlib_name option;\n         lib_findlib_containers: findlib_name list;\n-      } \n+      }\n+\n+\n+  type object_ =\n+      {\n+        obj_modules:            string list;\n+        obj_findlib_fullname:   findlib_name list option;\n+      }\n+\n \n   type executable =\n       {\n         exec_custom:          bool;\n         exec_main_is:         unix_filename;\n-      } \n+      }\n+\n \n   type flag =\n       {\n         flag_description:  string option;\n         flag_default:      bool conditional;\n-      } \n+      }\n+\n \n   type source_repository =\n       {\n@@ -1087,7 +1290,8 @@ module OASISTypes = struct\n         src_repo_branch:      string option;\n         src_repo_tag:         string option;\n         src_repo_subdir:      unix_filename option;\n-      } \n+      }\n+\n \n   type test =\n       {\n@@ -1097,7 +1301,8 @@ module OASISTypes = struct\n         test_working_directory:  unix_filename option;\n         test_run:                bool conditional;\n         test_tools:              tool list;\n-      } \n+      }\n+\n \n   type doc_format =\n     | HTML of unix_filename\n@@ -1107,90 +1312,475 @@ module OASISTypes = struct\n     | Info of unix_filename\n     | DVI\n     | OtherDoc\n-    \n \n-  type doc =\n-      {\n-        doc_type:        [`Doc] plugin;\n-        doc_custom:      custom;\n-        doc_build:       bool conditional;\n-        doc_install:     bool conditional;\n-        doc_install_dir: unix_filename;\n-        doc_title:       string;\n-        doc_authors:     string list;\n-        doc_abstract:    string option;\n-        doc_format:      doc_format;\n-        doc_data_files:  (unix_filename * unix_filename option) list;\n-        doc_build_tools: tool list;\n-      } \n \n-  type section =\n-    | Library    of common_section * build_section * library\n-    | Executable of common_section * build_section * executable\n-    | Flag       of common_section * flag\n-    | SrcRepo    of common_section * source_repository\n-    | Test       of common_section * test\n-    | Doc        of common_section * doc\n-    \n \n-  type section_kind =\n-      [ `Library | `Executable | `Flag | `SrcRepo | `Test | `Doc ]\n+  type doc =\n+      {\n+        doc_type:        [`Doc] plugin;\n+        doc_custom:      custom;\n+        doc_build:       bool conditional;\n+        doc_install:     bool conditional;\n+        doc_install_dir: unix_filename;\n+        doc_title:       string;\n+        doc_authors:     string list;\n+        doc_abstract:    string option;\n+        doc_format:      doc_format;\n+        doc_data_files:  (unix_filename * unix_filename option) list;\n+        doc_build_tools: tool list;\n+      }\n+\n+\n+  type section =\n+    | Library    of common_section * build_section * library\n+    | Object     of common_section * build_section * object_\n+    | Executable of common_section * build_section * executable\n+    | Flag       of common_section * flag\n+    | SrcRepo    of common_section * source_repository\n+    | Test       of common_section * test\n+    | Doc        of common_section * doc\n+\n+\n+\n+  type section_kind =\n+      [ `Library | `Object | `Executable | `Flag | `SrcRepo | `Test | `Doc ]\n+\n+\n+  type package =\n+      {\n+        oasis_version:          OASISVersion.t;\n+        ocaml_version:          OASISVersion.comparator option;\n+        findlib_version:        OASISVersion.comparator option;\n+        alpha_features:         string list;\n+        beta_features:          string list;\n+        name:                   package_name;\n+        version:                OASISVersion.t;\n+        license:                OASISLicense.t;\n+        license_file:           unix_filename option;\n+        copyrights:             string list;\n+        maintainers:            string list;\n+        authors:                string list;\n+        homepage:               url option;\n+        synopsis:               string;\n+        description:            OASISText.t option;\n+        categories:             url list;\n+\n+        conf_type:              [`Configure] plugin;\n+        conf_custom:            custom;\n+\n+        build_type:             [`Build] plugin;\n+        build_custom:           custom;\n+\n+        install_type:           [`Install] plugin;\n+        install_custom:         custom;\n+        uninstall_custom:       custom;\n+\n+        clean_custom:           custom;\n+        distclean_custom:       custom;\n+\n+        files_ab:               unix_filename list;\n+        sections:               section list;\n+        plugins:                [`Extra] plugin list;\n+        disable_oasis_section:  unix_filename list;\n+        schema_data:            PropList.Data.t;\n+        plugin_data:            plugin_data;\n+      }\n+\n+\n+end\n+\n+module OASISFeatures = struct\n+(* # 22 \"src/oasis/OASISFeatures.ml\" *)\n+\n+  open OASISTypes\n+  open OASISUtils\n+  open OASISGettext\n+  open OASISVersion\n+\n+  module MapPlugin =\n+    Map.Make\n+      (struct\n+         type t = plugin_kind * name\n+         let compare = Pervasives.compare\n+       end)\n+\n+  module Data =\n+  struct\n+    type t =\n+        {\n+          oasis_version: OASISVersion.t;\n+          plugin_versions: OASISVersion.t option MapPlugin.t;\n+          alpha_features: string list;\n+          beta_features: string list;\n+        }\n+\n+    let create oasis_version alpha_features beta_features =\n+      {\n+        oasis_version = oasis_version;\n+        plugin_versions = MapPlugin.empty;\n+        alpha_features = alpha_features;\n+        beta_features = beta_features\n+      }\n+\n+    let of_package pkg =\n+      create\n+        pkg.OASISTypes.oasis_version\n+        pkg.OASISTypes.alpha_features\n+        pkg.OASISTypes.beta_features\n+\n+    let add_plugin (plugin_kind, plugin_name, plugin_version) t =\n+      {t with\n+           plugin_versions = MapPlugin.add\n+                               (plugin_kind, plugin_name)\n+                               plugin_version\n+                               t.plugin_versions}\n+\n+    let plugin_version plugin_kind plugin_name t =\n+      MapPlugin.find (plugin_kind, plugin_name) t.plugin_versions\n+\n+    let to_string t =\n+      Printf.sprintf\n+        \"oasis_version: %s; alpha_features: %s; beta_features: %s; \\\n+         plugins_version: %s\"\n+        (OASISVersion.string_of_version t.oasis_version)\n+        (String.concat \", \" t.alpha_features)\n+        (String.concat \", \" t.beta_features)\n+        (String.concat \", \"\n+           (MapPlugin.fold\n+              (fun (_, plg) ver_opt acc ->\n+                 (plg^\n+                  (match ver_opt with\n+                     | Some v ->\n+                         \" \"^(OASISVersion.string_of_version v)\n+                     | None -> \"\"))\n+                 :: acc)\n+              t.plugin_versions []))\n+  end\n+\n+  type origin =\n+    | Field of string * string\n+    | Section of string\n+    | NoOrigin\n+\n+  type stage = Alpha | Beta\n+\n+\n+  let string_of_stage =\n+    function\n+      | Alpha -> \"alpha\"\n+      | Beta -> \"beta\"\n+\n+\n+  let field_of_stage =\n+    function\n+      | Alpha -> \"AlphaFeatures\"\n+      | Beta -> \"BetaFeatures\"\n+\n+  type publication = InDev of stage | SinceVersion of OASISVersion.t\n+\n+  type t =\n+      {\n+        name: string;\n+        plugin: all_plugin option;\n+        publication: publication;\n+        description: unit -> string;\n+      }\n+\n+  (* TODO: mutex protect this. *)\n+  let all_features = Hashtbl.create 13\n+\n+\n+  let since_version ver_str = SinceVersion (version_of_string ver_str)\n+  let alpha = InDev Alpha\n+  let beta = InDev Beta\n+\n+\n+  let to_string t =\n+    Printf.sprintf\n+      \"feature: %s; plugin: %s; publication: %s\"\n+      t.name\n+      (match t.plugin with\n+         | None -> \"<none>\"\n+         | Some (_, nm, _) -> nm)\n+      (match t.publication with\n+         | InDev stage -> string_of_stage stage\n+         | SinceVersion ver -> \">= \"^(OASISVersion.string_of_version ver))\n+\n+  let data_check t data origin =\n+    let no_message = \"no message\" in\n+\n+    let check_feature features stage =\n+      let has_feature = List.mem t.name features in\n+      if not has_feature then\n+        match origin with\n+          | Field (fld, where) ->\n+              Some\n+                (Printf.sprintf\n+                   (f_ \"Field %s in %s is only available when feature %s \\\n+                        is in field %s.\")\n+                   fld where t.name (field_of_stage stage))\n+          | Section sct ->\n+              Some\n+                (Printf.sprintf\n+                   (f_ \"Section %s is only available when features %s \\\n+                        is in field %s.\")\n+                   sct t.name (field_of_stage stage))\n+          | NoOrigin ->\n+              Some no_message\n+      else\n+        None\n+    in\n+\n+    let version_is_good ~min_version version fmt =\n+      let version_is_good =\n+        OASISVersion.comparator_apply\n+          version (OASISVersion.VGreaterEqual min_version)\n+      in\n+        Printf.ksprintf\n+          (fun str ->\n+             if version_is_good then\n+               None\n+             else\n+               Some str)\n+          fmt\n+    in\n+\n+    match origin, t.plugin, t.publication with\n+      | _, _, InDev Alpha -> check_feature data.Data.alpha_features Alpha\n+      | _, _, InDev Beta -> check_feature data.Data.beta_features Beta\n+      | Field(fld, where), None, SinceVersion min_version ->\n+          version_is_good ~min_version data.Data.oasis_version\n+            (f_ \"Field %s in %s is only valid since OASIS v%s, update \\\n+                 OASISFormat field from '%s' to '%s' after checking \\\n+                 OASIS changelog.\")\n+            fld where (string_of_version min_version)\n+            (string_of_version data.Data.oasis_version)\n+            (string_of_version min_version)\n+\n+      | Field(fld, where), Some(plugin_knd, plugin_name, _),\n+        SinceVersion min_version ->\n+          begin\n+            try\n+              let plugin_version_current =\n+                try\n+                  match Data.plugin_version plugin_knd plugin_name data with\n+                    | Some ver -> ver\n+                    | None ->\n+                        failwithf\n+                          (f_ \"Field %s in %s is only valid for the OASIS \\\n+                               plugin %s since v%s, but no plugin version is \\\n+                               defined in the _oasis file, change '%s' to \\\n+                               '%s (%s)' in your _oasis file.\")\n+                          fld where plugin_name (string_of_version min_version)\n+                          plugin_name\n+                          plugin_name (string_of_version min_version)\n+                with Not_found ->\n+                  failwithf\n+                    (f_ \"Field %s in %s is only valid when the OASIS plugin %s \\\n+                         is defined.\")\n+                    fld where plugin_name\n+              in\n+              version_is_good ~min_version plugin_version_current\n+                (f_ \"Field %s in %s is only valid for the OASIS plugin %s \\\n+                     since v%s, update your plugin from '%s (%s)' to \\\n+                     '%s (%s)' after checking the plugin's changelog.\")\n+                fld where plugin_name (string_of_version min_version)\n+                plugin_name (string_of_version plugin_version_current)\n+                plugin_name (string_of_version min_version)\n+            with Failure msg ->\n+              Some msg\n+          end\n+\n+      | Section sct, None, SinceVersion min_version ->\n+          version_is_good ~min_version data.Data.oasis_version\n+            (f_ \"Section %s is only valid for since OASIS v%s, update \\\n+                 OASISFormat field from '%s' to '%s' after checking OASIS \\\n+                 changelog.\")\n+            sct (string_of_version min_version)\n+            (string_of_version data.Data.oasis_version)\n+            (string_of_version min_version)\n+\n+      | Section sct, Some(plugin_knd, plugin_name, _),\n+        SinceVersion min_version ->\n+          begin\n+            try\n+              let plugin_version_current =\n+                try\n+                  match Data.plugin_version plugin_knd plugin_name data with\n+                    | Some ver -> ver\n+                    | None ->\n+                        failwithf\n+                          (f_ \"Section %s is only valid for the OASIS \\\n+                               plugin %s since v%s, but no plugin version is \\\n+                               defined in the _oasis file, change '%s' to \\\n+                               '%s (%s)' in your _oasis file.\")\n+                          sct plugin_name (string_of_version min_version)\n+                          plugin_name\n+                          plugin_name (string_of_version min_version)\n+                with Not_found ->\n+                  failwithf\n+                    (f_ \"Section %s is only valid when the OASIS plugin %s \\\n+                         is defined.\")\n+                    sct plugin_name\n+              in\n+              version_is_good ~min_version plugin_version_current\n+                (f_ \"Section %s is only valid for the OASIS plugin %s \\\n+                     since v%s, update your plugin from '%s (%s)' to \\\n+                     '%s (%s)' after checking the plugin's changelog.\")\n+                sct plugin_name (string_of_version min_version)\n+                plugin_name (string_of_version plugin_version_current)\n+                plugin_name (string_of_version min_version)\n+            with Failure msg ->\n+              Some msg\n+          end\n+\n+      | NoOrigin, None, SinceVersion min_version ->\n+          version_is_good ~min_version data.Data.oasis_version \"%s\" no_message\n+\n+      | NoOrigin, Some(plugin_knd, plugin_name, _), SinceVersion min_version ->\n+          begin\n+            try\n+              let plugin_version_current =\n+                match Data.plugin_version plugin_knd plugin_name data with\n+                  | Some ver -> ver\n+                  | None -> raise Not_found\n+              in\n+              version_is_good ~min_version plugin_version_current\n+                \"%s\" no_message\n+            with Not_found ->\n+              Some no_message\n+          end\n+\n+\n+  let data_assert t data origin =\n+    match data_check t data origin with\n+      | None -> ()\n+      | Some str -> failwith str\n+\n+\n+  let data_test t data =\n+    match data_check t data NoOrigin with\n+      | None -> true\n+      | Some str -> false\n+\n+\n+  let package_test t pkg =\n+    data_test t (Data.of_package pkg)\n+\n+\n+  let create ?plugin name publication description =\n+    let () =\n+      if Hashtbl.mem all_features name then\n+        failwithf \"Feature '%s' is already declared.\" name\n+    in\n+    let t =\n+      {\n+        name = name;\n+        plugin = plugin;\n+        publication = publication;\n+        description = description;\n+      }\n+    in\n+      Hashtbl.add all_features name t;\n+      t\n+\n+\n+  let get_stage name =\n+    try\n+      (Hashtbl.find all_features name).publication\n+    with Not_found ->\n+      failwithf (f_ \"Feature %s doesn't exist.\") name\n+\n+\n+  let list () =\n+    Hashtbl.fold (fun _ v acc -> v :: acc) all_features []\n+\n+  (*\n+   * Real flags.\n+   *)\n+\n+\n+  let features =\n+    create \"features_fields\"\n+      (since_version \"0.4\")\n+      (fun () ->\n+         s_ \"Enable to experiment not yet official features.\")\n+\n+\n+  let flag_docs =\n+    create \"flag_docs\"\n+      (since_version \"0.3\")\n+      (fun () ->\n+         s_ \"Building docs require '-docs' flag at configure.\")\n+\n+\n+  let flag_tests =\n+    create \"flag_tests\"\n+      (since_version \"0.3\")\n+      (fun () ->\n+         s_ \"Running tests require '-tests' flag at configure.\")\n+\n+\n+  let pack =\n+    create \"pack\"\n+      (since_version \"0.3\")\n+      (fun () ->\n+         s_ \"Allow to create packed library.\")\n+\n+\n+  let section_object =\n+    create \"section_object\" beta\n+      (fun () ->\n+         s_ \"Implement an object section.\")\n \n-  type package = \n-      {\n-        oasis_version:    OASISVersion.t;\n-        ocaml_version:    OASISVersion.comparator option;\n-        findlib_version:  OASISVersion.comparator option;\n-        name:             package_name;\n-        version:          OASISVersion.t;\n-        license:          OASISLicense.t;\n-        license_file:     unix_filename option;\n-        copyrights:       string list;\n-        maintainers:      string list;\n-        authors:          string list;\n-        homepage:         url option;\n-        synopsis:         string;\n-        description:      string option;\n-        categories:       url list;\n-\n-        conf_type:        [`Configure] plugin;\n-        conf_custom:      custom;\n-\n-        build_type:       [`Build] plugin;\n-        build_custom:     custom;\n-\n-        install_type:     [`Install] plugin;\n-        install_custom:   custom;\n-        uninstall_custom: custom;\n-\n-        clean_custom:     custom;\n-        distclean_custom: custom;\n-\n-        files_ab:         unix_filename list;\n-        sections:         section list;\n-        plugins:          [`Extra] plugin list;\n-        schema_data:      PropList.Data.t;\n-        plugin_data:      plugin_data;\n-      } \n \n+  let dynrun_for_release =\n+    create \"dynrun_for_release\" alpha\n+      (fun () ->\n+         s_ \"Make '-setup-update dynamic' suitable for releasing project.\")\n+\n+\n+  let compiled_setup_ml =\n+    create \"compiled_setup_ml\" alpha\n+      (fun () ->\n+         s_ \"It compiles the setup.ml and speed-up actions done with it.\")\n+\n+  let disable_oasis_section =\n+    create \"disable_oasis_section\" alpha\n+      (fun () ->\n+        s_ \"Allows the OASIS section comments and digest to be omitted in \\\n+            generated files.\")\n+\n+  let no_automatic_syntax =\n+    create \"no_automatic_syntax\" alpha\n+      (fun () ->\n+         s_ \"Disable the automatic inclusion of -syntax camlp4o for packages \\\n+             that matches the internal heuristic (if a dependency ends with \\\n+             a .syntax or is a well known syntax).\")\n end\n \n module OASISUnixPath = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISUnixPath.ml\" *)\n+(* # 22 \"src/oasis/OASISUnixPath.ml\" *)\n+\n \n   type unix_filename = string\n   type unix_dirname = string\n \n+\n   type host_filename = string\n   type host_dirname = string\n \n+\n   let current_dir_name = \".\"\n \n+\n   let parent_dir_name = \"..\"\n \n+\n   let is_current_dir fn =\n     fn = current_dir_name || fn = \"\"\n \n+\n   let concat f1 f2 =\n     if is_current_dir f1 then\n       f2\n@@ -1200,6 +1790,7 @@ module OASISUnixPath = struct\n       in\n         f1'^\"/\"^f2\n \n+\n   let make =\n     function\n       | hd :: tl ->\n@@ -1210,12 +1801,14 @@ module OASISUnixPath = struct\n       | [] ->\n           invalid_arg \"OASISUnixPath.make\"\n \n+\n   let dirname f =\n     try\n       String.sub f 0 (String.rindex f '/')\n     with Not_found ->\n       current_dir_name\n \n+\n   let basename f =\n     try\n       let pos_start =\n@@ -1225,6 +1818,7 @@ module OASISUnixPath = struct\n     with Not_found ->\n       f\n \n+\n   let chop_extension f =\n     try\n       let last_dot =\n@@ -1247,26 +1841,31 @@ module OASISUnixPath = struct\n     with Not_found ->\n       f\n \n+\n   let capitalize_file f =\n     let dir = dirname f in\n     let base = basename f in\n-    concat dir (String.capitalize base)\n+    concat dir (OASISString.capitalize_ascii base)\n+\n \n   let uncapitalize_file f =\n     let dir = dirname f in\n     let base = basename f in\n-    concat dir (String.uncapitalize base)\n+    concat dir (OASISString.uncapitalize_ascii base)\n+\n \n end\n \n module OASISHostPath = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISHostPath.ml\" *)\n+(* # 22 \"src/oasis/OASISHostPath.ml\" *)\n \n \n   open Filename\n \n+\n   module Unix = OASISUnixPath\n \n+\n   let make =\n     function\n       | [] ->\n@@ -1274,6 +1873,7 @@ module OASISHostPath = struct\n       | hd :: tl ->\n           List.fold_left Filename.concat hd tl\n \n+\n   let of_unix ufn =\n     if Sys.os_type = \"Unix\" then\n       ufn\n@@ -1293,14 +1893,18 @@ module OASISHostPath = struct\n end\n \n module OASISSection = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISSection.ml\" *)\n+(* # 22 \"src/oasis/OASISSection.ml\" *)\n+\n \n   open OASISTypes\n \n-  let section_kind_common = \n+\n+  let section_kind_common =\n     function\n-      | Library (cs, _, _) -> \n+      | Library (cs, _, _) ->\n           `Library, cs\n+      | Object (cs, _, _) ->\n+          `Object, cs\n       | Executable (cs, _, _) ->\n           `Executable, cs\n       | Flag (cs, _) ->\n@@ -1312,32 +1916,38 @@ module OASISSection = struct\n       | Doc (cs, _) ->\n           `Doc, cs\n \n+\n   let section_common sct =\n     snd (section_kind_common sct)\n \n+\n   let section_common_set cs =\n     function\n       | Library (_, bs, lib)     -> Library (cs, bs, lib)\n+      | Object (_, bs, obj)      -> Object (cs, bs, obj)\n       | Executable (_, bs, exec) -> Executable (cs, bs, exec)\n       | Flag (_, flg)            -> Flag (cs, flg)\n       | SrcRepo (_, src_repo)    -> SrcRepo (cs, src_repo)\n       | Test (_, tst)            -> Test (cs, tst)\n       | Doc (_, doc)             -> Doc (cs, doc)\n \n+\n   (** Key used to identify section\n     *)\n-  let section_id sct = \n-    let k, cs = \n+  let section_id sct =\n+    let k, cs =\n       section_kind_common sct\n     in\n       k, cs.cs_name\n \n+\n   let string_of_section sct =\n     let k, nm =\n       section_id sct\n     in\n       (match k with\n-         | `Library    -> \"library\" \n+         | `Library    -> \"library\"\n+         | `Object     -> \"object\"\n          | `Executable -> \"executable\"\n          | `Flag       -> \"flag\"\n          | `SrcRepo    -> \"src repository\"\n@@ -1345,20 +1955,22 @@ module OASISSection = struct\n          | `Doc        -> \"doc\")\n       ^\" \"^nm\n \n+\n   let section_find id scts =\n     List.find\n       (fun sct -> id = section_id sct)\n       scts\n \n+\n   module CSection =\n   struct\n     type t = section\n \n     let id = section_id\n \n-    let compare t1 t2 = \n+    let compare t1 t2 =\n       compare (id t1) (id t2)\n-      \n+\n     let equal t1 t2 =\n       (id t1) = (id t2)\n \n@@ -1366,28 +1978,33 @@ module OASISSection = struct\n       Hashtbl.hash (id t)\n   end\n \n+\n   module MapSection = Map.Make(CSection)\n   module SetSection = Set.Make(CSection)\n \n+\n end\n \n module OASISBuildSection = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISBuildSection.ml\" *)\n+(* # 22 \"src/oasis/OASISBuildSection.ml\" *)\n+\n \n end\n \n module OASISExecutable = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISExecutable.ml\" *)\n+(* # 22 \"src/oasis/OASISExecutable.ml\" *)\n+\n \n   open OASISTypes\n \n-  let unix_exec_is (cs, bs, exec) is_native ext_dll suffix_program = \n-    let dir = \n+\n+  let unix_exec_is (cs, bs, exec) is_native ext_dll suffix_program =\n+    let dir =\n       OASISUnixPath.concat\n         bs.bs_path\n         (OASISUnixPath.dirname exec.exec_main_is)\n     in\n-    let is_native_exec = \n+    let is_native_exec =\n       match bs.bs_compiled_object with\n         | Native -> true\n         | Best -> is_native ()\n@@ -1398,40 +2015,28 @@ module OASISExecutable = struct\n         dir\n         (cs.cs_name^(suffix_program ())),\n \n-      if not is_native_exec && \n-         not exec.exec_custom && \n+      if not is_native_exec &&\n+         not exec.exec_custom &&\n          bs.bs_c_sources <> [] then\n         Some (dir^\"/dll\"^cs.cs_name^\"_stubs\"^(ext_dll ()))\n       else\n         None\n \n+\n end\n \n module OASISLibrary = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISLibrary.ml\" *)\n+(* # 22 \"src/oasis/OASISLibrary.ml\" *)\n+\n \n   open OASISTypes\n   open OASISUtils\n   open OASISGettext\n   open OASISSection\n \n-  type library_name = name\n-  type findlib_part_name = name\n-  type 'a map_of_findlib_part_name = 'a OASISUtils.MapString.t\n-\n-  exception InternalLibraryNotFound of library_name\n-  exception FindlibPackageNotFound of findlib_name\n-\n-  type group_t =\n-    | Container of findlib_name * group_t list\n-    | Package of (findlib_name *\n-                  common_section *\n-                  build_section *\n-                  library *\n-                  group_t list)\n \n   (* Look for a module file, considering capitalization or not. *)\n-  let find_module source_file_exists (cs, bs, lib) modul =\n+  let find_module source_file_exists bs modul =\n     let possible_base_fn =\n       List.map\n         (OASISUnixPath.concat bs.bs_path)\n@@ -1469,10 +2074,11 @@ module OASISLibrary = struct\n         (`No_sources possible_base_fn)\n         possible_base_fn\n \n+\n   let source_unix_files ~ctxt (cs, bs, lib) source_file_exists =\n     List.fold_left\n       (fun acc modul ->\n-         match find_module source_file_exists (cs, bs, lib) modul with\n+         match find_module source_file_exists bs modul with\n            | `Sources (base_fn, lst) ->\n                (base_fn, lst) :: acc\n            | `No_sources _ ->\n@@ -1485,6 +2091,7 @@ module OASISLibrary = struct\n       []\n       (lib.lib_modules @ lib.lib_internal_modules)\n \n+\n   let generated_unix_files\n         ~ctxt\n         ~is_native\n@@ -1494,50 +2101,49 @@ module OASISLibrary = struct\n         ~source_file_exists\n         (cs, bs, lib) =\n \n-    let find_modules lst ext = \n+    let find_modules lst ext =\n       let find_module modul =\n-        match find_module source_file_exists (cs, bs, lib) modul with\n+        match find_module source_file_exists bs modul with\n+          | `Sources (base_fn, [fn]) when ext <> \"cmi\"\n+                                       && Filename.check_suffix fn \".mli\" ->\n+              None (* No implementation files for pure interface. *)\n           | `Sources (base_fn, _) ->\n-              [base_fn]\n+              Some [base_fn]\n           | `No_sources lst ->\n               OASISMessage.warning\n                 ~ctxt\n                 (f_ \"Cannot find source file matching \\\n                      module '%s' in library %s\")\n                 modul cs.cs_name;\n-              lst\n+              Some lst\n       in\n-      List.map \n-        (fun nm -> \n-           List.map \n-             (fun base_fn -> base_fn ^\".\"^ext)\n-             (find_module nm))\n-        lst\n-    in\n-\n-    (* The headers that should be compiled along *)\n-    let headers =\n-      if lib.lib_pack then\n+      List.fold_left\n+        (fun acc nm ->\n+          match find_module nm with\n+            | None -> acc\n+            | Some base_fns ->\n+                List.map (fun base_fn -> base_fn ^\".\"^ext) base_fns :: acc)\n         []\n-      else\n-        find_modules\n-          lib.lib_modules\n-          \"cmi\"\n+        lst\n     in\n \n     (* The .cmx that be compiled along *)\n     let cmxs =\n       let should_be_built =\n-        (not lib.lib_pack) && (* Do not install .cmx packed submodules *)\n         match bs.bs_compiled_object with\n           | Native -> true\n           | Best -> is_native\n           | Byte -> false\n       in\n         if should_be_built then\n-          find_modules\n-            (lib.lib_modules @ lib.lib_internal_modules)\n-            \"cmx\"\n+          if lib.lib_pack then\n+            find_modules\n+              [cs.cs_name]\n+              \"cmx\"\n+          else\n+            find_modules\n+              (lib.lib_modules @ lib.lib_internal_modules)\n+              \"cmx\"\n         else\n           []\n     in\n@@ -1546,12 +2152,32 @@ module OASISLibrary = struct\n       []\n     in\n \n+    (* The headers and annot/cmt files that should be compiled along *)\n+    let headers =\n+      let sufx =\n+        if lib.lib_pack\n+        then [\".cmti\"; \".cmt\"; \".annot\"]\n+        else [\".cmi\"; \".cmti\"; \".cmt\"; \".annot\"]\n+      in\n+      List.map\n+        begin\n+          List.fold_left\n+            begin fun accu s ->\n+              let dot = String.rindex s '.' in\n+              let base = String.sub s 0 dot in\n+              List.map ((^) base) sufx @ accu\n+            end\n+            []\n+        end\n+        (find_modules lib.lib_modules \"cmi\")\n+    in\n+\n     (* Compute what libraries should be built *)\n     let acc_nopath =\n       (* Add the packed header file if required *)\n       let add_pack_header acc =\n         if lib.lib_pack then\n-          [cs.cs_name^\".cmi\"] :: acc\n+          [cs.cs_name^\".cmi\"; cs.cs_name^\".cmti\"; cs.cs_name^\".cmt\"] :: acc\n         else\n           acc\n       in\n@@ -1559,7 +2185,7 @@ module OASISLibrary = struct\n         add_pack_header ([cs.cs_name^\".cma\"] :: acc)\n       in\n       let native acc =\n-        let acc = \n+        let acc =\n           add_pack_header\n             (if has_native_dynlink then\n                [cs.cs_name^\".cmxs\"] :: acc\n@@ -1598,11 +2224,113 @@ module OASISLibrary = struct\n            acc_nopath)\n         (headers @ cmxs)\n \n-  type data = common_section * build_section * library\n+\n+end\n+\n+module OASISObject = struct\n+(* # 22 \"src/oasis/OASISObject.ml\" *)\n+\n+\n+  open OASISTypes\n+  open OASISGettext\n+\n+\n+  let source_unix_files ~ctxt (cs, bs, obj) source_file_exists =\n+    List.fold_left\n+      (fun acc modul ->\n+         match OASISLibrary.find_module source_file_exists bs modul with\n+           | `Sources (base_fn, lst) ->\n+               (base_fn, lst) :: acc\n+           | `No_sources _ ->\n+               OASISMessage.warning\n+                 ~ctxt\n+                 (f_ \"Cannot find source file matching \\\n+                      module '%s' in object %s\")\n+                 modul cs.cs_name;\n+               acc)\n+      []\n+      obj.obj_modules\n+\n+\n+  let generated_unix_files\n+        ~ctxt\n+        ~is_native\n+        ~source_file_exists\n+        (cs, bs, obj) =\n+\n+    let find_module ext modul =\n+      match OASISLibrary.find_module source_file_exists bs modul with\n+        | `Sources (base_fn, _) -> [base_fn ^ ext]\n+        | `No_sources lst ->\n+          OASISMessage.warning\n+            ~ctxt\n+            (f_ \"Cannot find source file matching \\\n+                 module '%s' in object %s\")\n+            modul cs.cs_name ;\n+          lst\n+    in\n+\n+    let header, byte, native, c_object, f =\n+      match obj.obj_modules with\n+        | [ m ] -> (find_module \".cmi\" m,\n+                    find_module \".cmo\" m,\n+                    find_module \".cmx\" m,\n+                    find_module \".o\" m,\n+                    fun x -> x)\n+        | _ -> ([cs.cs_name ^ \".cmi\"],\n+                [cs.cs_name ^ \".cmo\"],\n+                [cs.cs_name ^ \".cmx\"],\n+                [cs.cs_name ^ \".o\"],\n+                OASISUnixPath.concat bs.bs_path)\n+    in\n+      List.map (List.map f) (\n+        match bs.bs_compiled_object with\n+          | Native ->\n+              native :: c_object :: byte :: header :: []\n+          | Best when is_native ->\n+              native :: c_object :: byte :: header :: []\n+          | Byte | Best ->\n+              byte :: header :: [])\n+\n+\n+end\n+\n+module OASISFindlib = struct\n+(* # 22 \"src/oasis/OASISFindlib.ml\" *)\n+\n+\n+  open OASISTypes\n+  open OASISUtils\n+  open OASISGettext\n+  open OASISSection\n+\n+\n+  type library_name = name\n+  type findlib_part_name = name\n+  type 'a map_of_findlib_part_name = 'a OASISUtils.MapString.t\n+\n+\n+  exception InternalLibraryNotFound of library_name\n+  exception FindlibPackageNotFound of findlib_name\n+\n+\n+  type group_t =\n+    | Container of findlib_name * group_t list\n+    | Package of (findlib_name *\n+                  common_section *\n+                  build_section *\n+                  [`Library of library | `Object of object_] *\n+                  group_t list)\n+\n+\n+  type data = common_section *\n+              build_section *\n+              [`Library of library | `Object of object_]\n   type tree =\n     | Node of (data option) * (tree MapString.t)\n     | Leaf of data\n \n+\n   let findlib_mapping pkg =\n     (* Map from library name to either full findlib name or parts + parent. *)\n     let fndlb_parts_of_lib_name =\n@@ -1641,6 +2369,23 @@ module OASISLibrary = struct\n                                mp\n                    end\n \n+               | Object (cs, _, obj) ->\n+                   begin\n+                     let obj_name = cs.cs_name in\n+                     if MapString.mem obj_name mp then\n+                       failwithf\n+                         (f_ \"The object name '%s' is used more than once.\")\n+                         obj_name;\n+                     let findlib_full_name = match obj.obj_findlib_fullname with\n+                       | Some ns -> String.concat \".\" ns\n+                       | None -> obj_name\n+                     in\n+                     MapString.add\n+                       obj_name\n+                       (`Solved findlib_full_name)\n+                       mp\n+                   end\n+\n                | Executable _ | Test _ | Flag _ | SrcRepo _ | Doc _ ->\n                    mp)\n           MapString.empty\n@@ -1708,7 +2453,7 @@ module OASISLibrary = struct\n         let lib_name = cs.cs_name in\n           findlib_name_of_library_name lib_name\n       in\n-      let rec add_children nm_lst (children : tree MapString.t) =\n+      let rec add_children nm_lst (children: tree MapString.t) =\n         match nm_lst with\n           | (hd :: tl) ->\n               begin\n@@ -1778,7 +2523,9 @@ module OASISLibrary = struct\n         (fun mp ->\n            function\n              | Library (cs, bs, lib) ->\n-                 add (cs, bs, lib) mp\n+                 add (cs, bs, `Library lib) mp\n+             | Object (cs, bs, obj) ->\n+                 add (cs, bs, `Object obj) mp\n              | _ ->\n                  mp)\n         MapString.empty\n@@ -1790,13 +2537,13 @@ module OASISLibrary = struct\n     in\n \n     let library_name_of_findlib_name =\n-      Lazy.lazy_from_fun\n-        (fun () ->\n-           (* Revert findlib_name_of_library_name. *)\n-           MapString.fold\n-             (fun k v mp -> MapString.add v k mp)\n-             fndlb_name_of_lib_name\n-             MapString.empty)\n+      lazy begin\n+        (* Revert findlib_name_of_library_name. *)\n+        MapString.fold\n+          (fun k v mp -> MapString.add v k mp)\n+          fndlb_name_of_lib_name\n+          MapString.empty\n+      end\n     in\n     let library_name_of_findlib_name fndlb_nm =\n       try\n@@ -1809,11 +2556,13 @@ module OASISLibrary = struct\n       findlib_name_of_library_name,\n       library_name_of_findlib_name\n \n+\n   let findlib_of_group =\n     function\n       | Container (fndlb_nm, _)\n       | Package (fndlb_nm, _, _, _, _) -> fndlb_nm\n \n+\n   let root_of_group grp =\n     let rec root_lib_aux =\n       (* We do a DFS in the group. *)\n@@ -1838,40 +2587,48 @@ module OASISLibrary = struct\n               (f_ \"Unable to determine root library of findlib library '%s'\")\n               (findlib_of_group grp)\n \n+\n end\n \n module OASISFlag = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISFlag.ml\" *)\n+(* # 22 \"src/oasis/OASISFlag.ml\" *)\n+\n \n end\n \n module OASISPackage = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISPackage.ml\" *)\n+(* # 22 \"src/oasis/OASISPackage.ml\" *)\n+\n \n end\n \n module OASISSourceRepository = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISSourceRepository.ml\" *)\n+(* # 22 \"src/oasis/OASISSourceRepository.ml\" *)\n+\n \n end\n \n module OASISTest = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISTest.ml\" *)\n+(* # 22 \"src/oasis/OASISTest.ml\" *)\n+\n \n end\n \n module OASISDocument = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISDocument.ml\" *)\n+(* # 22 \"src/oasis/OASISDocument.ml\" *)\n+\n \n end\n \n module OASISExec = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISExec.ml\" *)\n+(* # 22 \"src/oasis/OASISExec.ml\" *)\n+\n \n   open OASISGettext\n   open OASISUtils\n   open OASISMessage\n \n+\n   (* TODO: I don't like this quote, it is there because $(rm) foo expands to\n    * 'rm -f' foo...\n    *)\n@@ -1902,6 +2659,7 @@ module OASISExec = struct\n         | Some f, i ->\n             f i\n \n+\n   let run_read_output ~ctxt ?f_exit_code cmd args =\n     let fn =\n       Filename.temp_file \"oasis-\" \".txt\"\n@@ -1933,6 +2691,7 @@ module OASISExec = struct\n         (try Sys.remove fn with _ -> ());\n         raise e\n \n+\n   let run_read_one_line ~ctxt ?f_exit_code cmd args =\n     match run_read_output ~ctxt ?f_exit_code cmd args with\n       | [fst] ->\n@@ -1944,10 +2703,12 @@ module OASISExec = struct\n end\n \n module OASISFileUtil = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/oasis/OASISFileUtil.ml\" *)\n+(* # 22 \"src/oasis/OASISFileUtil.ml\" *)\n+\n \n   open OASISGettext\n \n+\n   let file_exists_case fn =\n     let dirname = Filename.dirname fn in\n     let basename = Filename.basename fn in\n@@ -1961,6 +2722,7 @@ module OASISFileUtil = struct\n       else\n         false\n \n+\n   let find_file ?(case_sensitive=true) paths exts =\n \n     (* Cardinal product of two list *)\n@@ -1969,7 +2731,7 @@ module OASISFileUtil = struct\n         (List.map\n            (fun a ->\n               List.map\n-                (fun b -> a,b)\n+                (fun b -> a, b)\n                 lst2)\n            lst1)\n     in\n@@ -1979,7 +2741,7 @@ module OASISFileUtil = struct\n         | p1 :: p2 :: tl ->\n             let acc =\n               (List.map\n-                 (fun (a,b) -> Filename.concat a b)\n+                 (fun (a, b) -> Filename.concat a b)\n                  (p1 * p2))\n             in\n               combined_paths (acc :: tl)\n@@ -1991,19 +2753,21 @@ module OASISFileUtil = struct\n \n     let alternatives =\n       List.map\n-        (fun (p,e) ->\n+        (fun (p, e) ->\n            if String.length e > 0 && e.[0] <> '.' then\n              p ^ \".\" ^ e\n            else\n              p ^ e)\n         ((combined_paths paths) * exts)\n     in\n-      List.find\n+      List.find (fun file ->\n         (if case_sensitive then\n-           file_exists_case\n+           file_exists_case file\n          else\n-           Sys.file_exists)\n-        alternatives\n+           Sys.file_exists file)\n+        && not (Sys.is_directory file)\n+      ) alternatives\n+\n \n   let which ~ctxt prg =\n     let path_sep =\n@@ -2023,6 +2787,7 @@ module OASISFileUtil = struct\n     in\n       find_file ~case_sensitive:false [path_lst; [prg]] exec_ext\n \n+\n   (**/**)\n   let rec fix_dir dn =\n     (* Windows hack because Sys.file_exists \"src\\\\\" = false when\n@@ -2036,9 +2801,11 @@ module OASISFileUtil = struct\n       else\n         dn\n \n+\n   let q = Filename.quote\n   (**/**)\n \n+\n   let cp ~ctxt ?(recurse=false) src tgt =\n     if recurse then\n       match Sys.os_type with\n@@ -2055,6 +2822,7 @@ module OASISFileUtil = struct\n          | _ -> \"cp\")\n         [q src; q tgt]\n \n+\n   let mkdir ~ctxt tgt =\n     OASISExec.run ~ctxt\n       (match Sys.os_type with\n@@ -2062,6 +2830,7 @@ module OASISFileUtil = struct\n          | _ -> \"mkdir\")\n       [q tgt]\n \n+\n   let rec mkdir_parent ~ctxt f tgt =\n     let tgt =\n       fix_dir tgt\n@@ -2084,15 +2853,20 @@ module OASISFileUtil = struct\n             end\n         end\n \n+\n   let rmdir ~ctxt tgt =\n-    if Sys.readdir tgt = [||] then\n-      begin\n-        match Sys.os_type with\n-          | \"Win32\" ->\n-              OASISExec.run ~ctxt \"rd\" [q tgt]\n-          | _ ->\n-              OASISExec.run ~ctxt \"rm\" [\"-r\"; q tgt]\n-      end\n+    if Sys.readdir tgt = [||] then begin\n+      match Sys.os_type with\n+        | \"Win32\" ->\n+            OASISExec.run ~ctxt \"rd\" [q tgt]\n+        | _ ->\n+            OASISExec.run ~ctxt \"rm\" [\"-r\"; q tgt]\n+    end else begin\n+      OASISMessage.error ~ctxt\n+        (f_ \"Cannot remove directory '%s': not empty.\")\n+        tgt\n+    end\n+\n \n   let glob ~ctxt fn =\n    let basename =\n@@ -2139,19 +2913,23 @@ module OASISFileUtil = struct\n end\n \n \n-# 2142 \"setup.ml\"\n+# 2916 \"setup.ml\"\n module BaseEnvLight = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseEnvLight.ml\" *)\n+(* # 22 \"src/base/BaseEnvLight.ml\" *)\n+\n \n   module MapString = Map.Make(String)\n \n+\n   type t = string MapString.t\n \n+\n   let default_filename =\n     Filename.concat\n       (Sys.getcwd ())\n       \"setup.data\"\n \n+\n   let load ?(allow_empty=false) ?(filename=default_filename) () =\n     if Sys.file_exists filename then\n       begin\n@@ -2209,26 +2987,29 @@ module BaseEnvLight = struct\n              filename)\n       end\n \n-  let var_get name env =\n-    let rec var_expand str =\n-      let buff =\n-        Buffer.create ((String.length str) * 2)\n-      in\n-        Buffer.add_substitute\n-          buff\n-          (fun var ->\n-             try\n-               var_expand (MapString.find var env)\n-             with Not_found ->\n-               failwith\n-                 (Printf.sprintf\n-                    \"No variable %s defined when trying to expand %S.\"\n-                    var\n-                    str))\n-          str;\n-        Buffer.contents buff\n+\n+  let rec var_expand str env =\n+    let buff =\n+      Buffer.create ((String.length str) * 2)\n     in\n-      var_expand (MapString.find name env)\n+      Buffer.add_substitute\n+        buff\n+        (fun var ->\n+           try\n+             var_expand (MapString.find var env) env\n+           with Not_found ->\n+             failwith\n+               (Printf.sprintf\n+                  \"No variable %s defined when trying to expand %S.\"\n+                  var\n+                  str))\n+        str;\n+      Buffer.contents buff\n+\n+\n+  let var_get name env =\n+    var_expand (MapString.find name env) env\n+\n \n   let var_choose lst env =\n     OASISExpr.choose\n@@ -2237,20 +3018,24 @@ module BaseEnvLight = struct\n end\n \n \n-# 2240 \"setup.ml\"\n+# 3021 \"setup.ml\"\n module BaseContext = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseContext.ml\" *)\n+(* # 22 \"src/base/BaseContext.ml\" *)\n \n+  (* TODO: get rid of this module. *)\n   open OASISContext\n \n-  let args = args\n+\n+  let args () = fst (fspecs ())\n+\n \n   let default = default\n \n end\n \n module BaseMessage = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseMessage.ml\" *)\n+(* # 22 \"src/base/BaseMessage.ml\" *)\n+\n \n   (** Message to user, overrid for Base\n       @author Sylvain Le Gall\n@@ -2258,31 +3043,38 @@ module BaseMessage = struct\n   open OASISMessage\n   open BaseContext\n \n+\n   let debug fmt   = debug ~ctxt:!default fmt\n \n+\n   let info fmt    = info ~ctxt:!default fmt\n \n+\n   let warning fmt = warning ~ctxt:!default fmt\n \n+\n   let error fmt = error ~ctxt:!default fmt\n \n end\n \n module BaseEnv = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseEnv.ml\" *)\n+(* # 22 \"src/base/BaseEnv.ml\" *)\n \n   open OASISGettext\n   open OASISUtils\n   open PropList\n \n+\n   module MapString = BaseEnvLight.MapString\n \n+\n   type origin_t =\n     | ODefault\n     | OGetEnv\n     | OFileLoad\n     | OCommandLine\n \n+\n   type cli_handle_t =\n     | CLINone\n     | CLIAuto\n@@ -2290,6 +3082,7 @@ module BaseEnv = struct\n     | CLIEnable\n     | CLIUser of (Arg.key * Arg.spec * Arg.doc) list\n \n+\n   type definition_t =\n       {\n         hide:       bool;\n@@ -2299,21 +3092,26 @@ module BaseEnv = struct\n         group:      string option;\n       }\n \n+\n   let schema =\n     Schema.create \"environment\"\n \n+\n   (* Environment data *)\n   let env =\n     Data.create ()\n \n+\n   (* Environment data from file *)\n   let env_from_file =\n     ref MapString.empty\n \n+\n   (* Lexer for var *)\n   let var_lxr =\n     Genlex.make_lexer []\n \n+\n   let rec var_expand str =\n     let buff =\n       Buffer.create ((String.length str) * 2)\n@@ -2364,6 +3162,7 @@ module BaseEnv = struct\n         str;\n       Buffer.contents buff\n \n+\n   and var_get name =\n     let vl =\n       try\n@@ -2378,6 +3177,7 @@ module BaseEnv = struct\n     in\n       var_expand vl\n \n+\n   let var_choose ?printer ?name lst =\n     OASISExpr.choose\n       ?printer\n@@ -2385,6 +3185,7 @@ module BaseEnv = struct\n       var_get\n       lst\n \n+\n   let var_protect vl =\n     let buff =\n       Buffer.create (String.length vl)\n@@ -2396,6 +3197,7 @@ module BaseEnv = struct\n         vl;\n       Buffer.contents buff\n \n+\n   let var_define\n         ?(hide=false)\n         ?(dump=true)\n@@ -2481,6 +3283,7 @@ module BaseEnv = struct\n       fun () ->\n         var_expand (var_get_low (var_get_lst env))\n \n+\n   let var_redefine\n         ?hide\n         ?dump\n@@ -2509,8 +3312,9 @@ module BaseEnv = struct\n           dflt\n       end\n \n-  let var_ignore (e : unit -> string) =\n-    ()\n+\n+  let var_ignore (e: unit -> string) = ()\n+\n \n   let print_hidden =\n     var_define\n@@ -2521,6 +3325,7 @@ module BaseEnv = struct\n       \"print_hidden\"\n       (fun () -> \"false\")\n \n+\n   let var_all () =\n     List.rev\n       (Schema.fold\n@@ -2532,24 +3337,28 @@ module BaseEnv = struct\n          []\n          schema)\n \n+\n   let default_filename =\n     BaseEnvLight.default_filename\n \n+\n   let load ?allow_empty ?filename () =\n     env_from_file := BaseEnvLight.load ?allow_empty ?filename ()\n \n+\n   let unload () =\n     env_from_file := MapString.empty;\n     Data.clear env\n \n+\n   let dump ?(filename=default_filename) () =\n     let chn =\n       open_out_bin filename\n     in\n-    let output nm value = \n+    let output nm value =\n       Printf.fprintf chn \"%s=%S\\n\" nm value\n     in\n-    let mp_todo = \n+    let mp_todo =\n       (* Dump data from schema *)\n       Schema.fold\n         (fun mp_todo nm def _ ->\n@@ -2576,6 +3385,7 @@ module BaseEnv = struct\n       (* End of the dump *)\n       close_out chn\n \n+\n   let print () =\n     let printable_vars =\n       Schema.fold\n@@ -2614,11 +3424,12 @@ module BaseEnv = struct\n \n     Printf.printf \"\\nConfiguration: \\n\";\n     List.iter\n-      (fun (name,value) ->\n+      (fun (name, value) ->\n         Printf.printf \"%s: %s %s\\n\" name (dot_pad name) value)\n       (List.rev printable_vars);\n     Printf.printf \"\\n%!\"\n \n+\n   let args () =\n     let arg_concat =\n       OASISUtils.varname_concat ~hyphen:'-'\n@@ -2729,11 +3540,13 @@ module BaseEnv = struct\n end\n \n module BaseArgExt = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseArgExt.ml\" *)\n+(* # 22 \"src/base/BaseArgExt.ml\" *)\n+\n \n   open OASISUtils\n   open OASISGettext\n \n+\n   let parse argv args =\n       (* Simulate command line for Arg *)\n       let current =\n@@ -2757,13 +3570,15 @@ module BaseArgExt = struct\n end\n \n module BaseCheck = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseCheck.ml\" *)\n+(* # 22 \"src/base/BaseCheck.ml\" *)\n+\n \n   open BaseEnv\n   open BaseMessage\n   open OASISUtils\n   open OASISGettext\n \n+\n   let prog_best prg prg_lst =\n     var_redefine\n       prg\n@@ -2786,15 +3601,19 @@ module BaseCheck = struct\n              | Some prg -> prg\n              | None -> raise Not_found)\n \n+\n   let prog prg =\n     prog_best prg [prg]\n \n+\n   let prog_opt prg =\n     prog_best prg [prg^\".opt\"; prg]\n \n+\n   let ocamlfind =\n     prog \"ocamlfind\"\n \n+\n   let version\n         var_prefix\n         cmp\n@@ -2836,11 +3655,13 @@ module BaseCheck = struct\n                  version_str)\n         ()\n \n+\n   let package_version pkg =\n     OASISExec.run_read_one_line ~ctxt:!BaseContext.default\n       (ocamlfind ())\n       [\"query\"; \"-format\"; \"%v\"; pkg]\n \n+\n   let package ?version_comparator pkg () =\n     let var =\n       OASISUtils.varname_concat\n@@ -2883,18 +3704,21 @@ module BaseCheck = struct\n end\n \n module BaseOCamlcConfig = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseOCamlcConfig.ml\" *)\n+(* # 22 \"src/base/BaseOCamlcConfig.ml\" *)\n \n \n   open BaseEnv\n   open OASISUtils\n   open OASISGettext\n \n+\n   module SMap = Map.Make(String)\n \n+\n   let ocamlc =\n     BaseCheck.prog_opt \"ocamlc\"\n \n+\n   let ocamlc_config_map =\n     (* Map name to value for ocamlc -config output\n        (name ^\": \"^value)\n@@ -2940,7 +3764,7 @@ module BaseOCamlcConfig = struct\n             mp\n     in\n \n-    let cache = \n+    let cache =\n       lazy\n         (var_protect\n            (Marshal.to_string\n@@ -2959,6 +3783,7 @@ module BaseOCamlcConfig = struct\n            (* TODO: update if ocamlc change !!! *)\n            Lazy.force cache)\n \n+\n   let var_define nm =\n     (* Extract data from ocamlc -config *)\n     let avlbl_config_get () =\n@@ -2967,15 +3792,15 @@ module BaseOCamlcConfig = struct\n         0\n     in\n     let chop_version_suffix s =\n-      try \n+      try\n         String.sub s 0 (String.index s '+')\n-      with _ -> \n+      with _ ->\n         s\n      in\n \n     let nm_config, value_config =\n       match nm with\n-        | \"ocaml_version\" -> \n+        | \"ocaml_version\" ->\n             \"version\", chop_version_suffix\n         | _ -> nm, (fun x -> x)\n     in\n@@ -2999,7 +3824,7 @@ module BaseOCamlcConfig = struct\n end\n \n module BaseStandardVar = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseStandardVar.ml\" *)\n+(* # 22 \"src/base/BaseStandardVar.ml\" *)\n \n \n   open OASISGettext\n@@ -3008,6 +3833,7 @@ module BaseStandardVar = struct\n   open BaseCheck\n   open BaseEnv\n \n+\n   let ocamlfind  = BaseCheck.ocamlfind\n   let ocamlc     = BaseOCamlcConfig.ocamlc\n   let ocamlopt   = prog_opt \"ocamlopt\"\n@@ -3018,13 +3844,16 @@ module BaseStandardVar = struct\n   let rpkg =\n     ref None\n \n+\n   let pkg_get () =\n     match !rpkg with\n       | Some pkg -> pkg\n       | None -> failwith (s_ \"OASIS Package is not set\")\n \n+\n   let var_cond = ref []\n \n+\n   let var_define_cond ~since_version f dflt =\n     let holder = ref (fun () -> dflt) in\n     let since_version =\n@@ -3036,14 +3865,17 @@ module BaseStandardVar = struct\n            holder := f ()) :: !var_cond;\n       fun () -> !holder ()\n \n+\n   (**/**)\n \n+\n   let pkg_name =\n     var_define\n       ~short_desc:(fun () -> s_ \"Package name\")\n       \"pkg_name\"\n       (fun () -> (pkg_get ()).name)\n \n+\n   let pkg_version =\n     var_define\n       ~short_desc:(fun () -> s_ \"Package version\")\n@@ -3051,16 +3883,20 @@ module BaseStandardVar = struct\n       (fun () ->\n          (OASISVersion.string_of_version (pkg_get ()).version))\n \n+\n   let c = BaseOCamlcConfig.var_define\n \n+\n   let os_type        = c \"os_type\"\n   let system         = c \"system\"\n   let architecture   = c \"architecture\"\n   let ccomp_type     = c \"ccomp_type\"\n   let ocaml_version  = c \"ocaml_version\"\n \n+\n   (* TODO: Check standard variable presence at runtime *)\n \n+\n   let standard_library_default = c \"standard_library_default\"\n   let standard_library         = c \"standard_library\"\n   let standard_runtime         = c \"standard_runtime\"\n@@ -3074,24 +3910,27 @@ module BaseStandardVar = struct\n   let default_executable_name  = c \"default_executable_name\"\n   let systhread_supported      = c \"systhread_supported\"\n \n-  let flexlink = \n+\n+  let flexlink =\n     BaseCheck.prog \"flexlink\"\n \n+\n   let flexdll_version =\n     var_define\n       ~short_desc:(fun () -> \"FlexDLL version (Win32)\")\n       \"flexdll_version\"\n       (fun () ->\n-         let lst = \n+         let lst =\n            OASISExec.run_read_output ~ctxt:!BaseContext.default\n              (flexlink ()) [\"-help\"]\n          in\n-           match lst with \n+           match lst with\n              | line :: _ ->\n                  Scanf.sscanf line \"FlexDLL version %s\" (fun ver -> ver)\n              | [] ->\n                  raise Not_found)\n \n+\n   (**/**)\n   let p name hlp dflt =\n     var_define\n@@ -3101,6 +3940,7 @@ module BaseStandardVar = struct\n       name\n       dflt\n \n+\n   let (/) a b =\n     if os_type () = Sys.os_type then\n       Filename.concat a b\n@@ -3111,6 +3951,7 @@ module BaseStandardVar = struct\n         (os_type ())\n   (**/**)\n \n+\n   let prefix =\n     p \"prefix\"\n       (fun () -> s_ \"Install architecture-independent files dir\")\n@@ -3124,96 +3965,115 @@ module BaseStandardVar = struct\n            | _ ->\n                \"/usr/local\")\n \n+\n   let exec_prefix =\n     p \"exec_prefix\"\n       (fun () -> s_ \"Install architecture-dependent files in dir\")\n       (fun () -> \"$prefix\")\n \n+\n   let bindir =\n     p \"bindir\"\n       (fun () -> s_ \"User executables\")\n       (fun () -> \"$exec_prefix\"/\"bin\")\n \n+\n   let sbindir =\n     p \"sbindir\"\n       (fun () -> s_ \"System admin executables\")\n       (fun () -> \"$exec_prefix\"/\"sbin\")\n \n+\n   let libexecdir =\n     p \"libexecdir\"\n       (fun () -> s_ \"Program executables\")\n       (fun () -> \"$exec_prefix\"/\"libexec\")\n \n+\n   let sysconfdir =\n     p \"sysconfdir\"\n       (fun () -> s_ \"Read-only single-machine data\")\n       (fun () -> \"$prefix\"/\"etc\")\n \n+\n   let sharedstatedir =\n     p \"sharedstatedir\"\n       (fun () -> s_ \"Modifiable architecture-independent data\")\n       (fun () -> \"$prefix\"/\"com\")\n \n+\n   let localstatedir =\n     p \"localstatedir\"\n       (fun () -> s_ \"Modifiable single-machine data\")\n       (fun () -> \"$prefix\"/\"var\")\n \n+\n   let libdir =\n     p \"libdir\"\n       (fun () -> s_ \"Object code libraries\")\n       (fun () -> \"$exec_prefix\"/\"lib\")\n \n+\n   let datarootdir =\n     p \"datarootdir\"\n       (fun () -> s_ \"Read-only arch-independent data root\")\n       (fun () -> \"$prefix\"/\"share\")\n \n+\n   let datadir =\n     p \"datadir\"\n       (fun () -> s_ \"Read-only architecture-independent data\")\n       (fun () -> \"$datarootdir\")\n \n+\n   let infodir =\n     p \"infodir\"\n       (fun () -> s_ \"Info documentation\")\n       (fun () -> \"$datarootdir\"/\"info\")\n \n+\n   let localedir =\n     p \"localedir\"\n       (fun () -> s_ \"Locale-dependent data\")\n       (fun () -> \"$datarootdir\"/\"locale\")\n \n+\n   let mandir =\n     p \"mandir\"\n       (fun () -> s_ \"Man documentation\")\n       (fun () -> \"$datarootdir\"/\"man\")\n \n+\n   let docdir =\n     p \"docdir\"\n       (fun () -> s_ \"Documentation root\")\n       (fun () -> \"$datarootdir\"/\"doc\"/\"$pkg_name\")\n \n+\n   let htmldir =\n     p \"htmldir\"\n       (fun () -> s_ \"HTML documentation\")\n       (fun () -> \"$docdir\")\n \n+\n   let dvidir =\n     p \"dvidir\"\n       (fun () -> s_ \"DVI documentation\")\n       (fun () -> \"$docdir\")\n \n+\n   let pdfdir =\n     p \"pdfdir\"\n       (fun () -> s_ \"PDF documentation\")\n       (fun () -> \"$docdir\")\n \n+\n   let psdir =\n     p \"psdir\"\n       (fun () -> s_ \"PS documentation\")\n       (fun () -> \"$docdir\")\n \n+\n   let destdir =\n     p \"destdir\"\n       (fun () -> s_ \"Prepend a path when installing package\")\n@@ -3223,35 +4083,39 @@ module BaseStandardVar = struct\n               (\"destdir\",\n                Some (s_ \"undefined by construct\"))))\n \n+\n   let findlib_version =\n     var_define\n       \"findlib_version\"\n       (fun () ->\n          BaseCheck.package_version \"findlib\")\n \n+\n   let is_native =\n     var_define\n       \"is_native\"\n       (fun () ->\n          try\n-           let _s : string =\n+           let _s: string =\n              ocamlopt ()\n            in\n              \"true\"\n          with PropList.Not_set _ ->\n-           let _s : string =\n+           let _s: string =\n              ocamlc ()\n            in\n              \"false\")\n \n+\n   let ext_program =\n     var_define\n       \"suffix_program\"\n       (fun () ->\n          match os_type () with\n-           | \"Win32\" -> \".exe\"\n+           | \"Win32\" | \"Cygwin\" -> \".exe\"\n            | _ -> \"\")\n \n+\n   let rm =\n     var_define\n       ~short_desc:(fun () -> s_ \"Remove a file.\")\n@@ -3261,6 +4125,7 @@ module BaseStandardVar = struct\n            | \"Win32\" -> \"del\"\n            | _ -> \"rm -f\")\n \n+\n   let rmdir =\n     var_define\n       ~short_desc:(fun () -> s_ \"Remove a directory.\")\n@@ -3270,6 +4135,7 @@ module BaseStandardVar = struct\n            | \"Win32\" -> \"rd\"\n            | _ -> \"rm -rf\")\n \n+\n   let debug =\n     var_define\n       ~short_desc:(fun () -> s_ \"Turn ocaml debug flag on\")\n@@ -3277,6 +4143,7 @@ module BaseStandardVar = struct\n       \"debug\"\n       (fun () -> \"true\")\n \n+\n   let profile =\n     var_define\n       ~short_desc:(fun () -> s_ \"Turn ocaml profile flag on\")\n@@ -3284,6 +4151,7 @@ module BaseStandardVar = struct\n       \"profile\"\n       (fun () -> \"false\")\n \n+\n   let tests =\n     var_define_cond ~since_version:\"0.3\"\n       (fun () ->\n@@ -3295,6 +4163,7 @@ module BaseStandardVar = struct\n            (fun () -> \"false\"))\n       \"true\"\n \n+\n   let docs =\n     var_define_cond ~since_version:\"0.3\"\n       (fun () ->\n@@ -3305,6 +4174,7 @@ module BaseStandardVar = struct\n            (fun () -> \"true\"))\n       \"true\"\n \n+\n   let native_dynlink =\n     var_define\n       ~short_desc:(fun () -> s_ \"Compiler support generation of .cmxs.\")\n@@ -3312,7 +4182,7 @@ module BaseStandardVar = struct\n       \"native_dynlink\"\n       (fun () ->\n          let res =\n-           let ocaml_lt_312 () = \n+           let ocaml_lt_312 () =\n              OASISVersion.comparator_apply\n                (OASISVersion.version_of_string (ocaml_version ()))\n                (OASISVersion.VLesser\n@@ -3324,7 +4194,7 @@ module BaseStandardVar = struct\n                (OASISVersion.VLesser\n                   (OASISVersion.version_of_string \"0.30\"))\n            in\n-           let has_native_dynlink = \n+           let has_native_dynlink =\n              let ocamlfind = ocamlfind () in\n                try\n                  let fn =\n@@ -3342,10 +4212,10 @@ module BaseStandardVar = struct\n                false\n              else if ocaml_lt_312 () then\n                false\n-             else if (os_type () = \"Win32\" || os_type () = \"Cygwin\") \n+             else if (os_type () = \"Win32\" || os_type () = \"Cygwin\")\n                      && flexdll_lt_030 () then\n                begin\n-                 BaseMessage.warning \n+                 BaseMessage.warning\n                    (f_ \".cmxs generation disabled because FlexDLL needs to be \\\n                         at least 0.30. Please upgrade FlexDLL from %s to 0.30.\")\n                    (flexdll_version ());\n@@ -3356,6 +4226,7 @@ module BaseStandardVar = struct\n          in\n            string_of_bool res)\n \n+\n   let init pkg =\n     rpkg := Some pkg;\n     List.iter (fun f -> f pkg.oasis_version) !var_cond\n@@ -3363,12 +4234,14 @@ module BaseStandardVar = struct\n end\n \n module BaseFileAB = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseFileAB.ml\" *)\n+(* # 22 \"src/base/BaseFileAB.ml\" *)\n+\n \n   open BaseEnv\n   open OASISGettext\n   open BaseMessage\n \n+\n   let to_filename fn =\n     let fn =\n       OASISHostPath.of_unix fn\n@@ -3379,6 +4252,7 @@ module BaseFileAB = struct\n           fn;\n       Filename.chop_extension fn\n \n+\n   let replace fn_lst =\n     let buff =\n       Buffer.create 13\n@@ -3411,15 +4285,18 @@ module BaseFileAB = struct\n end\n \n module BaseLog = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseLog.ml\" *)\n+(* # 22 \"src/base/BaseLog.ml\" *)\n+\n \n   open OASISUtils\n \n+\n   let default_filename =\n     Filename.concat\n       (Filename.dirname BaseEnv.default_filename)\n       \"setup.log\"\n \n+\n   module SetTupleString =\n     Set.Make\n       (struct\n@@ -3430,6 +4307,7 @@ module BaseLog = struct\n              | n -> n\n        end)\n \n+\n   let load () =\n     if Sys.file_exists default_filename then\n       begin\n@@ -3479,6 +4357,7 @@ module BaseLog = struct\n         []\n       end\n \n+\n   let register event data =\n     let chn_out =\n       open_out_gen [Open_append; Open_creat; Open_text] 0o644 default_filename\n@@ -3486,6 +4365,7 @@ module BaseLog = struct\n       Printf.fprintf chn_out \"%S %S\\n\" event data;\n       close_out chn_out\n \n+\n   let unregister event data =\n     if Sys.file_exists default_filename then\n       begin\n@@ -3511,6 +4391,7 @@ module BaseLog = struct\n             Sys.remove default_filename\n       end\n \n+\n   let filter events =\n     let st_events =\n       List.fold_left\n@@ -3523,6 +4404,7 @@ module BaseLog = struct\n         (fun (e, _) -> SetString.mem e st_events)\n         (load ())\n \n+\n   let exists event data =\n     List.exists\n       (fun v -> (event, data) = v)\n@@ -3530,31 +4412,38 @@ module BaseLog = struct\n end\n \n module BaseBuilt = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseBuilt.ml\" *)\n+(* # 22 \"src/base/BaseBuilt.ml\" *)\n+\n \n   open OASISTypes\n   open OASISGettext\n   open BaseStandardVar\n   open BaseMessage\n \n+\n   type t =\n     | BExec    (* Executable *)\n     | BExecLib (* Library coming with executable *)\n     | BLib     (* Library *)\n+    | BObj     (* Library *)\n     | BDoc     (* Document *)\n \n+\n   let to_log_event_file t nm =\n     \"built_\"^\n     (match t with\n        | BExec -> \"exec\"\n        | BExecLib -> \"exec_lib\"\n        | BLib -> \"lib\"\n+       | BObj -> \"obj\"\n        | BDoc -> \"doc\")^\n     \"_\"^nm\n \n+\n   let to_log_event_done t nm =\n     \"is_\"^(to_log_event_file t nm)\n \n+\n   let register t nm lst =\n     BaseLog.register\n       (to_log_event_done t nm)\n@@ -3585,6 +4474,7 @@ module BaseBuilt = struct\n                (String.concat (s_ \", \") alt))\n       lst\n \n+\n   let unregister t nm =\n     List.iter\n       (fun (e, d) ->\n@@ -3593,6 +4483,7 @@ module BaseBuilt = struct\n          [to_log_event_file t nm;\n           to_log_event_done t nm])\n \n+\n   let fold t nm f acc =\n     List.fold_left\n       (fun acc (_, fn) ->\n@@ -3612,6 +4503,8 @@ module BaseBuilt = struct\n                          (f_ \"executable %s\")\n                      | BLib ->\n                          (f_ \"library %s\")\n+                     | BObj ->\n+                         (f_ \"object %s\")\n                      | BDoc ->\n                          (f_ \"documentation %s\"))\n                   nm);\n@@ -3621,6 +4514,7 @@ module BaseBuilt = struct\n       (BaseLog.filter\n          [to_log_event_file t nm])\n \n+\n   let is_built t nm =\n     List.fold_left\n       (fun is_built (_, d) ->\n@@ -3632,6 +4526,7 @@ module BaseBuilt = struct\n       (BaseLog.filter\n          [to_log_event_done t nm])\n \n+\n   let of_executable ffn (cs, bs, exec) =\n     let unix_exec_is, unix_dll_opt =\n       OASISExecutable.unix_exec_is\n@@ -3655,6 +4550,7 @@ module BaseBuilt = struct\n       unix_exec_is,\n       unix_dll_opt\n \n+\n   let of_library ffn (cs, bs, lib) =\n     let unix_lst =\n       OASISLibrary.generated_unix_files\n@@ -3674,16 +4570,35 @@ module BaseBuilt = struct\n     in\n       evs, unix_lst\n \n+\n+  let of_object ffn (cs, bs, obj) =\n+    let unix_lst =\n+      OASISObject.generated_unix_files\n+        ~ctxt:!BaseContext.default\n+        ~source_file_exists:(fun fn ->\n+           OASISFileUtil.file_exists_case (OASISHostPath.of_unix fn))\n+        ~is_native:(bool_of_string (is_native ()))\n+        (cs, bs, obj)\n+    in\n+    let evs =\n+      [BObj,\n+       cs.cs_name,\n+       List.map (List.map ffn) unix_lst]\n+    in\n+      evs, unix_lst\n+\n end\n \n module BaseCustom = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseCustom.ml\" *)\n+(* # 22 \"src/base/BaseCustom.ml\" *)\n+\n \n   open BaseEnv\n   open BaseMessage\n   open OASISTypes\n   open OASISGettext\n \n+\n   let run cmd args extra_args =\n     OASISExec.run ~ctxt:!BaseContext.default ~quote:false\n       (var_expand cmd)\n@@ -3691,6 +4606,7 @@ module BaseCustom = struct\n          var_expand\n          (args @ (Array.to_list extra_args)))\n \n+\n   let hook ?(failsafe=false) cstm f e =\n     let optional_command lst =\n       let printer =\n@@ -3727,7 +4643,7 @@ module BaseCustom = struct\n end\n \n module BaseDynVar = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseDynVar.ml\" *)\n+(* # 22 \"src/base/BaseDynVar.ml\" *)\n \n \n   open OASISTypes\n@@ -3735,6 +4651,7 @@ module BaseDynVar = struct\n   open BaseEnv\n   open BaseBuilt\n \n+\n   let init pkg =\n     (* TODO: disambiguate exec vs other variable by adding exec_VARNAME. *)\n     (* TODO: provide compile option for library libary_byte_args_VARNAME... *)\n@@ -3768,13 +4685,14 @@ module BaseDynVar = struct\n                                              (f_ \"Executable '%s' not yet built.\")\n                                              cs.cs_name)))))\n \n-         | Library _ | Flag _ | Test _ | SrcRepo _ | Doc _ ->\n+         | Library _ | Object _ | Flag _ | Test _ | SrcRepo _ | Doc _ ->\n              ())\n       pkg.sections\n end\n \n module BaseTest = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseTest.ml\" *)\n+(* # 22 \"src/base/BaseTest.ml\" *)\n+\n \n   open BaseEnv\n   open BaseMessage\n@@ -3782,6 +4700,7 @@ module BaseTest = struct\n   open OASISExpr\n   open OASISGettext\n \n+\n   let test lst pkg extra_args =\n \n     let one_test (failure, n) (test_plugin, cs, test) =\n@@ -3832,7 +4751,7 @@ module BaseTest = struct\n           (failure, n)\n         end\n     in\n-    let (failed, n) =\n+    let failed, n =\n       List.fold_left\n         one_test\n         (0.0, 0)\n@@ -3855,7 +4774,7 @@ module BaseTest = struct\n         info \"%s\" msg;\n \n       (* Possible explanation why the tests where not run. *)\n-      if OASISVersion.version_0_3_or_after pkg.oasis_version &&\n+      if OASISFeatures.package_test OASISFeatures.flag_tests pkg &&\n          not (bool_of_string (BaseStandardVar.tests ())) &&\n          lst <> [] then\n         BaseMessage.warning\n@@ -3864,13 +4783,15 @@ module BaseTest = struct\n end\n \n module BaseDoc = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseDoc.ml\" *)\n+(* # 22 \"src/base/BaseDoc.ml\" *)\n+\n \n   open BaseEnv\n   open BaseMessage\n   open OASISTypes\n   open OASISGettext\n \n+\n   let doc lst pkg extra_args =\n \n     let one_doc (doc_plugin, cs, doc) =\n@@ -3890,7 +4811,7 @@ module BaseDoc = struct\n     in\n       List.iter one_doc lst;\n \n-      if OASISVersion.version_0_3_or_after pkg.oasis_version &&\n+      if OASISFeatures.package_test OASISFeatures.flag_docs pkg &&\n          not (bool_of_string (BaseStandardVar.docs ())) &&\n          lst <> [] then\n         BaseMessage.warning\n@@ -3899,7 +4820,7 @@ module BaseDoc = struct\n end\n \n module BaseSetup = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/base/BaseSetup.ml\" *)\n+(* # 22 \"src/base/BaseSetup.ml\" *)\n \n   open BaseEnv\n   open BaseMessage\n@@ -3908,12 +4829,15 @@ module BaseSetup = struct\n   open OASISGettext\n   open OASISUtils\n \n+\n   type std_args_fun =\n       package -> string array -> unit\n \n+\n   type ('a, 'b) section_args_fun =\n       name * (package -> (common_section * 'a) -> string array -> 'b)\n \n+\n   type t =\n       {\n         configure:        std_args_fun;\n@@ -3937,6 +4861,7 @@ module BaseSetup = struct\n         setup_update:     bool;\n       }\n \n+\n   (* Associate a plugin function with data from package *)\n   let join_plugin_sections filter_map lst =\n     List.rev\n@@ -3950,6 +4875,7 @@ module BaseSetup = struct\n          []\n          lst)\n \n+\n   (* Search for plugin data associated with a section name *)\n   let lookup_plugin_section plugin action nm lst =\n     try\n@@ -3961,11 +4887,12 @@ module BaseSetup = struct\n         nm\n         action\n \n+\n   let configure t args =\n     (* Run configure *)\n     BaseCustom.hook\n       t.package.conf_custom\n-      (fun () -> \n+      (fun () ->\n          (* Reload if preconf has changed it *)\n          begin\n            try\n@@ -3992,12 +4919,14 @@ module BaseSetup = struct\n     (* Replace data in file *)\n     BaseFileAB.replace t.package.files_ab\n \n+\n   let build t args =\n     BaseCustom.hook\n       t.package.build_custom\n       (t.build t.package)\n       args\n \n+\n   let doc t args =\n     BaseDoc.doc\n       (join_plugin_sections\n@@ -4017,6 +4946,7 @@ module BaseSetup = struct\n       t.package\n       args\n \n+\n   let test t args =\n     BaseTest.test\n       (join_plugin_sections\n@@ -4036,6 +4966,7 @@ module BaseSetup = struct\n       t.package\n       args\n \n+\n   let all t args =\n     let rno_doc =\n       ref false\n@@ -4043,6 +4974,9 @@ module BaseSetup = struct\n     let rno_test =\n       ref false\n     in\n+    let arg_rest =\n+      ref []\n+    in\n       Arg.parse_argv\n         ~current:(ref 0)\n         (Array.of_list\n@@ -4056,12 +4990,16 @@ module BaseSetup = struct\n           \"-no-test\",\n           Arg.Set rno_test,\n           s_ \"Don't run test target\";\n+\n+          \"--\",\n+          Arg.Rest (fun arg -> arg_rest := arg :: !arg_rest),\n+          s_ \"All arguments for configure.\";\n         ]\n         (failwithf (f_ \"Don't know what to do with '%s'\"))\n         \"\";\n \n       info \"Running configure step\";\n-      configure t [||];\n+      configure t (Array.of_list (List.rev !arg_rest));\n \n       info \"Running build step\";\n       build     t [||];\n@@ -4089,22 +5027,26 @@ module BaseSetup = struct\n           info \"Skipping test step\"\n         end\n \n+\n   let install t args =\n     BaseCustom.hook\n       t.package.install_custom\n       (t.install t.package)\n       args\n \n+\n   let uninstall t args =\n     BaseCustom.hook\n       t.package.uninstall_custom\n       (t.uninstall t.package)\n       args\n \n+\n   let reinstall t args =\n     uninstall t args;\n     install t args\n \n+\n   let clean, distclean =\n     let failsafe f a =\n       try\n@@ -4146,6 +5088,7 @@ module BaseSetup = struct\n                         (f t.package (cs, doc))\n                         args\n                 | Library _\n+                | Object _\n                 | Executable _\n                 | Flag _\n                 | SrcRepo _ ->\n@@ -4201,9 +5144,11 @@ module BaseSetup = struct\n \n       clean, distclean\n \n+\n   let version t _ =\n     print_endline t.oasis_version\n \n+\n   let update_setup_ml, no_update_setup_ml_cli =\n     let b = ref true in\n       b,\n@@ -4211,11 +5156,15 @@ module BaseSetup = struct\n        Arg.Clear b,\n        s_ \" Don't try to update setup.ml, even if _oasis has changed.\")\n \n+\n+  let default_oasis_fn = \"_oasis\"\n+\n+\n   let update_setup_ml t =\n     let oasis_fn =\n       match t.oasis_fn with\n         | Some fn -> fn\n-        | None -> \"_oasis\"\n+        | None -> default_oasis_fn\n     in\n     let oasis_exec =\n       match t.oasis_exec with\n@@ -4313,7 +5262,8 @@ module BaseSetup = struct\n         try\n           match t.oasis_digest with\n             | Some dgst ->\n-              if Sys.file_exists oasis_fn && dgst <> Digest.file \"_oasis\" then\n+              if Sys.file_exists oasis_fn &&\n+                 dgst <> Digest.file default_oasis_fn then\n                 begin\n                   do_update ();\n                   true\n@@ -4333,6 +5283,7 @@ module BaseSetup = struct\n     else\n       false\n \n+\n   let setup t =\n     let catch_exn =\n       ref true\n@@ -4474,41 +5425,34 @@ module BaseSetup = struct\n         error \"%s\" (Printexc.to_string e);\n         exit 1\n \n+\n end\n \n \n-# 4480 \"setup.ml\"\n+# 5432 \"setup.ml\"\n module InternalConfigurePlugin = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/plugins/internal/InternalConfigurePlugin.ml\" *)\n+(* # 22 \"src/plugins/internal/InternalConfigurePlugin.ml\" *)\n+\n \n   (** Configure using internal scheme\n       @author Sylvain Le Gall\n     *)\n \n+\n   open BaseEnv\n   open OASISTypes\n   open OASISUtils\n   open OASISGettext\n   open BaseMessage\n \n+\n   (** Configure build using provided series of check to be done\n     * and then output corresponding file.\n     *)\n   let configure pkg argv =\n-    let var_ignore_eval var =\n-      let _s : string =\n-        var ()\n-      in\n-        ()\n-    in\n-\n-    let errors =\n-      ref SetString.empty\n-    in\n-\n-    let buff =\n-      Buffer.create 13\n-    in\n+    let var_ignore_eval var = let _s: string = var () in () in\n+    let errors = ref SetString.empty in\n+    let buff = Buffer.create 13 in\n \n     let add_errors fmt =\n       Printf.kbprintf\n@@ -4656,6 +5600,20 @@ module InternalConfigurePlugin = struct\n         | None ->\n             ()\n     end;\n+    (* Make sure the findlib version is fine for the OCaml compiler. *)\n+    begin\n+      let ocaml_ge4 =\n+        OASISVersion.version_compare\n+          (OASISVersion.version_of_string (BaseStandardVar.ocaml_version()))\n+          (OASISVersion.version_of_string \"4.0.0\") >= 0 in\n+      if ocaml_ge4 then\n+        let findlib_lt132 =\n+          OASISVersion.version_compare\n+            (OASISVersion.version_of_string (BaseStandardVar.findlib_version()))\n+            (OASISVersion.version_of_string \"1.3.2\") < 0 in\n+        if findlib_lt132 then\n+          add_errors \"OCaml >= 4.0.0 requires Findlib version >= 1.3.2\"\n+    end;\n \n     (* FlexDLL *)\n     if BaseStandardVar.os_type () = \"Win32\" ||\n@@ -4718,43 +5676,58 @@ module InternalConfigurePlugin = struct\n           (SetString.cardinal !errors)\n       end\n \n+\n end\n \n module InternalInstallPlugin = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/plugins/internal/InternalInstallPlugin.ml\" *)\n+(* # 22 \"src/plugins/internal/InternalInstallPlugin.ml\" *)\n+\n \n   (** Install using internal scheme\n       @author Sylvain Le Gall\n     *)\n \n+\n   open BaseEnv\n   open BaseStandardVar\n   open BaseMessage\n   open OASISTypes\n-  open OASISLibrary\n+  open OASISFindlib\n   open OASISGettext\n   open OASISUtils\n \n+\n   let exec_hook =\n     ref (fun (cs, bs, exec) -> cs, bs, exec)\n \n+\n   let lib_hook =\n     ref (fun (cs, bs, lib) -> cs, bs, lib, [])\n \n+\n+  let obj_hook =\n+    ref (fun (cs, bs, obj) -> cs, bs, obj, [])\n+\n+\n   let doc_hook =\n     ref (fun (cs, doc) -> cs, doc)\n \n+\n   let install_file_ev =\n     \"install-file\"\n \n+\n   let install_dir_ev =\n     \"install-dir\"\n \n+\n   let install_findlib_ev =\n     \"install-findlib\"\n \n+\n   let win32_max_command_line_length = 8000\n \n+\n   let split_install_command ocamlfind findlib_name meta files =\n     if Sys.os_type = \"Win32\" then\n       (* Arguments for the first command: *)\n@@ -4794,20 +5767,21 @@ module InternalInstallPlugin = struct\n                 | (firsts, others) ->\n                     let cmd = args @ firsts in\n                     (* Use -add for remaining commands: *)\n-                    let () = \n+                    let () =\n                       let findlib_ge_132 =\n                         OASISVersion.comparator_apply\n-                          (OASISVersion.version_of_string \n+                          (OASISVersion.version_of_string\n                              (BaseStandardVar.findlib_version ()))\n-                          (OASISVersion.VGreaterEqual \n+                          (OASISVersion.VGreaterEqual\n                              (OASISVersion.version_of_string \"1.3.2\"))\n                       in\n                         if not findlib_ge_132 then\n                           failwithf\n-                            (f_ \"Installing the library %s require to use the flag \\\n-                                 '-add' of ocamlfind because the command line is too \\\n-                                  long. This flag is only available for findlib 1.3.2. \\\n-                                  Please upgrade findlib from %s to 1.3.2\")\n+                            (f_ \"Installing the library %s require to use the \\\n+                                 flag '-add' of ocamlfind because the command \\\n+                                 line is too long. This flag is only available \\\n+                                 for findlib 1.3.2. Please upgrade findlib from \\\n+                                 %s to 1.3.2\")\n                             findlib_name (BaseStandardVar.findlib_version ())\n                     in\n                     let cmds = split other_args others in\n@@ -4818,6 +5792,7 @@ module InternalInstallPlugin = struct\n     else\n       [\"install\" :: findlib_name :: meta :: files]\n \n+\n   let install pkg argv =\n \n     let in_destdir =\n@@ -4890,6 +5865,17 @@ module InternalInstallPlugin = struct\n           lst\n     in\n \n+    let make_fnames modul sufx =\n+      List.fold_right\n+        begin fun sufx accu ->\n+          (OASISString.capitalize_ascii modul ^ sufx) ::\n+          (OASISString.uncapitalize_ascii modul ^ sufx) ::\n+          accu\n+        end\n+        sufx\n+        []\n+    in\n+\n     (** Install all libraries *)\n     let install_libs pkg =\n \n@@ -4910,27 +5896,29 @@ module InternalInstallPlugin = struct\n                   OASISHostPath.of_unix bs.bs_path\n                 in\n                   List.fold_left\n-                    (fun acc modul ->\n-                       try\n-                         List.find\n-                           OASISFileUtil.file_exists_case\n-                           (List.map\n-                              (Filename.concat path)\n-                              [modul^\".mli\";\n-                               modul^\".ml\";\n-                               String.uncapitalize modul^\".mli\";\n-                               String.capitalize   modul^\".mli\";\n-                               String.uncapitalize modul^\".ml\";\n-                               String.capitalize   modul^\".ml\"])\n-                         :: acc\n-                       with Not_found ->\n-                         begin\n-                           warning\n-                             (f_ \"Cannot find source header for module %s \\\n-                                  in library %s\")\n-                             modul cs.cs_name;\n-                           acc\n-                         end)\n+                    begin fun acc modul ->\n+                      begin\n+                        try\n+                          [List.find\n+                            OASISFileUtil.file_exists_case\n+                            (List.map\n+                               (Filename.concat path)\n+                               (make_fnames modul [\".mli\"; \".ml\"]))]\n+                        with Not_found ->\n+                          warning\n+                            (f_ \"Cannot find source header for module %s \\\n+                                 in library %s\")\n+                            modul cs.cs_name;\n+                          []\n+                      end\n+                      @\n+                      List.filter\n+                        OASISFileUtil.file_exists_case\n+                        (List.map\n+                           (Filename.concat path)\n+                           (make_fnames modul [\".annot\";\".cmti\";\".cmt\"]))\n+                      @ acc\n+                    end\n                     acc\n                     lib.lib_modules\n               in\n@@ -4961,6 +5949,77 @@ module InternalInstallPlugin = struct\n             begin\n               (f_data, acc)\n             end\n+      and files_of_object (f_data, acc) data_obj =\n+        let cs, bs, obj, obj_extra =\n+          !obj_hook data_obj\n+        in\n+          if var_choose bs.bs_install &&\n+             BaseBuilt.is_built BaseBuilt.BObj cs.cs_name then\n+            begin\n+              let acc =\n+                (* Start with acc + obj_extra *)\n+                List.rev_append obj_extra acc\n+              in\n+              let acc =\n+                (* Add uncompiled header from the source tree *)\n+                let path =\n+                  OASISHostPath.of_unix bs.bs_path\n+                in\n+                  List.fold_left\n+                    begin fun acc modul ->\n+                      begin\n+                        try\n+                          [List.find\n+                             OASISFileUtil.file_exists_case\n+                             (List.map\n+                                (Filename.concat path)\n+                                (make_fnames modul [\".mli\"; \".ml\"]))]\n+                        with Not_found ->\n+                          warning\n+                            (f_ \"Cannot find source header for module %s \\\n+                                 in object %s\")\n+                            modul cs.cs_name;\n+                          []\n+                      end\n+                      @\n+                      List.filter\n+                        OASISFileUtil.file_exists_case\n+                        (List.map\n+                           (Filename.concat path)\n+                           (make_fnames modul [\".annot\";\".cmti\";\".cmt\"]))\n+                      @ acc\n+                    end\n+                    acc\n+                    obj.obj_modules\n+              in\n+\n+              let acc =\n+               (* Get generated files *)\n+               BaseBuilt.fold\n+                 BaseBuilt.BObj\n+                 cs.cs_name\n+                 (fun acc fn -> fn :: acc)\n+                 acc\n+              in\n+\n+              let f_data () =\n+                (* Install data associated with the object *)\n+                install_data\n+                  bs.bs_path\n+                  bs.bs_data_files\n+                  (Filename.concat\n+                     (datarootdir ())\n+                     pkg.name);\n+                f_data ()\n+              in\n+\n+                (f_data, acc)\n+            end\n+           else\n+            begin\n+              (f_data, acc)\n+            end\n+\n       in\n \n       (* Install one group of library *)\n@@ -4971,8 +6030,10 @@ module InternalInstallPlugin = struct\n             match grp with\n               | Container (_, children) ->\n                   data_and_files, children\n-              | Package (_, cs, bs, lib, children) ->\n+              | Package (_, cs, bs, `Library lib, children) ->\n                   files_of_library data_and_files (cs, bs, lib), children\n+              | Package (_, cs, bs, `Object obj, children) ->\n+                  files_of_object data_and_files (cs, bs, obj), children\n           in\n             List.fold_left\n               install_group_lib_aux\n@@ -5006,7 +6067,7 @@ module InternalInstallPlugin = struct\n             begin\n               let meta =\n                 (* Search META file *)\n-                let (_, bs, _) =\n+                let _, bs, _ =\n                   root_lib\n                 in\n                 let res =\n@@ -5019,7 +6080,7 @@ module InternalInstallPlugin = struct\n                       findlib_name;\n                   res\n               in\n-              let files = \n+              let files =\n                 (* Make filename shorter to avoid hitting command max line length\n                  * too early, esp. on Windows.\n                  *)\n@@ -5028,24 +6089,24 @@ module InternalInstallPlugin = struct\n                   let nlen = String.length n in\n                     if plen <= nlen && String.sub n 0 plen = p then\n                       begin\n-                        let fn_sep = \n+                        let fn_sep =\n                           if Sys.os_type = \"Win32\" then\n                             '\\\\'\n                           else\n                             '/'\n                         in\n                         let cutpoint = plen +\n-                          (if plen < nlen && n.[plen] = fn_sep then \n+                          (if plen < nlen && n.[plen] = fn_sep then\n                              1\n-                           else \n+                           else\n                              0)\n                         in\n                           String.sub n cutpoint (nlen - cutpoint)\n                       end\n-                    else \n+                    else\n                       n\n                 in\n-                  List.map (remove_prefix (Sys.getcwd ())) files \n+                  List.map (remove_prefix (Sys.getcwd ())) files\n               in\n                 info\n                   (f_ \"Installing findlib library '%s'\")\n@@ -5079,7 +6140,7 @@ module InternalInstallPlugin = struct\n \n     let install_execs pkg =\n       let install_exec data_exec =\n-        let (cs, bs, exec) =\n+        let cs, bs, exec =\n           !exec_hook data_exec\n         in\n           if var_choose bs.bs_install &&\n@@ -5126,7 +6187,7 @@ module InternalInstallPlugin = struct\n \n     let install_docs pkg =\n       let install_doc data =\n-        let (cs, doc) =\n+        let cs, doc =\n           !doc_hook data\n         in\n           if var_choose doc.doc_install &&\n@@ -5162,6 +6223,7 @@ module InternalInstallPlugin = struct\n       install_execs pkg;\n       install_docs  pkg\n \n+\n   (* Uninstall already installed data *)\n   let uninstall _ argv =\n     List.iter\n@@ -5225,41 +6287,49 @@ module InternalInstallPlugin = struct\n          (BaseLog.filter\n             [install_file_ev;\n              install_dir_ev;\n-             install_findlib_ev;]))\n+             install_findlib_ev]))\n+\n \n end\n \n \n-# 5233 \"setup.ml\"\n+# 6296 \"setup.ml\"\n module CustomPlugin = struct\n-(* # 21 \"/somewhere/.share/projects/externals/oasis/_build/src/plugins/custom/CustomPlugin.ml\" *)\n+(* # 22 \"src/plugins/custom/CustomPlugin.ml\" *)\n+\n \n   (** Generate custom configure/build/doc/test/install system\n       @author\n     *)\n \n+\n   open BaseEnv\n   open OASISGettext\n   open OASISTypes\n \n \n \n+\n+\n   type t =\n       {\n         cmd_main:      command_line conditional;\n         cmd_clean:     (command_line option) conditional;\n         cmd_distclean: (command_line option) conditional;\n-      } \n+      }\n+\n+\n+  let run  = BaseCustom.run\n \n-  let run  = BaseCustom.run \n \n   let main t _ extra_args =\n     let cmd, args =\n-      var_choose \n-        ~name:(s_ \"main command\") \n+      var_choose\n+        ~name:(s_ \"main command\")\n         t.cmd_main\n     in\n-      run cmd args extra_args \n+      run cmd args extra_args\n+\n \n   let clean t pkg extra_args =\n     match var_choose t.cmd_clean with\n@@ -5268,6 +6338,7 @@ module CustomPlugin = struct\n       | _ ->\n           ()\n \n+\n   let distclean t pkg extra_args =\n     match var_choose t.cmd_distclean with\n       | Some (cmd, args) ->\n@@ -5275,20 +6346,21 @@ module CustomPlugin = struct\n       | _ ->\n           ()\n \n+\n   module Build =\n-  struct \n+  struct\n     let main t pkg extra_args =\n       main t pkg extra_args;\n       List.iter\n         (fun sct ->\n            let evs =\n-             match sct with \n+             match sct with\n                | Library (cs, bs, lib) when var_choose bs.bs_build ->\n                    begin\n-                     let evs, _ = \n-                       BaseBuilt.of_library \n+                     let evs, _ =\n+                       BaseBuilt.of_library\n                          OASISHostPath.of_unix\n-                         (cs, bs, lib) \n+                         (cs, bs, lib)\n                      in\n                        evs\n                    end\n@@ -5329,6 +6401,7 @@ module CustomPlugin = struct\n       distclean t pkg extra_args\n   end\n \n+\n   module Test =\n   struct\n     let main t pkg (cs, test) extra_args =\n@@ -5336,7 +6409,7 @@ module CustomPlugin = struct\n         main t pkg extra_args;\n         0.0\n       with Failure s ->\n-        BaseMessage.warning \n+        BaseMessage.warning\n           (f_ \"Test '%s' fails: %s\")\n           cs.cs_name\n           s;\n@@ -5346,9 +6419,10 @@ module CustomPlugin = struct\n       clean t pkg extra_args\n \n     let distclean t pkg (cs, test) extra_args =\n-      distclean t pkg extra_args \n+      distclean t pkg extra_args\n   end\n \n+\n   module Doc =\n   struct\n     let main t pkg (cs, _) extra_args =\n@@ -5363,10 +6437,11 @@ module CustomPlugin = struct\n       distclean t pkg extra_args\n   end\n \n+\n end\n \n \n-# 5369 \"setup.ml\"\n+# 6444 \"setup.ml\"\n open OASISTypes;;\n \n let setup_t =\n@@ -5393,8 +6468,8 @@ let setup_t =\n                  (OASISExpr.EBool true,\n                    Some ((\"PREFIX=$prefix\", [\"omake\"; \"clean\"])))\n               ];\n-            cmd_distclean = [(OASISExpr.EBool true, None)];\n-            };\n+            cmd_distclean = [(OASISExpr.EBool true, None)]\n+         };\n      test = [];\n      doc = [];\n      install =\n@@ -5406,19 +6481,28 @@ let setup_t =\n                    (\"PREFIX=$prefix\", [\"omake\"; \"install\"]))\n               ];\n             cmd_clean = [(OASISExpr.EBool true, None)];\n-            cmd_distclean = [(OASISExpr.EBool true, None)];\n-            };\n+            cmd_distclean = [(OASISExpr.EBool true, None)]\n+         };\n      uninstall =\n        CustomPlugin.main\n          {\n             CustomPlugin.cmd_main =\n               [\n                  (OASISExpr.EBool true,\n-                   (\"PREFIX=$prefix\", [\"omake\"; \"uninstall\"]))\n+                   (\"yes\",\n+                     [\n+                        \"no\";\n+                        \"|\";\n+                        \"omake\";\n+                        \"--install;\";\n+                        \"PREFIX=$prefix\";\n+                        \"omake\";\n+                        \"uninstall\"\n+                     ]))\n               ];\n             cmd_clean = [(OASISExpr.EBool true, None)];\n-            cmd_distclean = [(OASISExpr.EBool true, None)];\n-            };\n+            cmd_distclean = [(OASISExpr.EBool true, None)]\n+         };\n      clean =\n        [\n           CustomPlugin.Build.clean\n@@ -5441,8 +6525,8 @@ let setup_t =\n                     (OASISExpr.EBool true,\n                       Some ((\"PREFIX=$prefix\", [\"omake\"; \"clean\"])))\n                  ];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               };\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            };\n           CustomPlugin.clean\n             {\n                CustomPlugin.cmd_main =\n@@ -5451,18 +6535,27 @@ let setup_t =\n                       (\"PREFIX=$prefix\", [\"omake\"; \"install\"]))\n                  ];\n                cmd_clean = [(OASISExpr.EBool true, None)];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               };\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            };\n           CustomPlugin.clean\n             {\n                CustomPlugin.cmd_main =\n                  [\n                     (OASISExpr.EBool true,\n-                      (\"PREFIX=$prefix\", [\"omake\"; \"uninstall\"]))\n+                      (\"yes\",\n+                        [\n+                           \"no\";\n+                           \"|\";\n+                           \"omake\";\n+                           \"--install;\";\n+                           \"PREFIX=$prefix\";\n+                           \"omake\";\n+                           \"uninstall\"\n+                        ]))\n                  ];\n                cmd_clean = [(OASISExpr.EBool true, None)];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               }\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            }\n        ];\n      clean_test = [];\n      clean_doc = [];\n@@ -5488,8 +6581,8 @@ let setup_t =\n                     (OASISExpr.EBool true,\n                       Some ((\"PREFIX=$prefix\", [\"omake\"; \"clean\"])))\n                  ];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               };\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            };\n           CustomPlugin.distclean\n             {\n                CustomPlugin.cmd_main =\n@@ -5498,18 +6591,27 @@ let setup_t =\n                       (\"PREFIX=$prefix\", [\"omake\"; \"install\"]))\n                  ];\n                cmd_clean = [(OASISExpr.EBool true, None)];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               };\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            };\n           CustomPlugin.distclean\n             {\n                CustomPlugin.cmd_main =\n                  [\n                     (OASISExpr.EBool true,\n-                      (\"PREFIX=$prefix\", [\"omake\"; \"uninstall\"]))\n+                      (\"yes\",\n+                        [\n+                           \"no\";\n+                           \"|\";\n+                           \"omake\";\n+                           \"--install;\";\n+                           \"PREFIX=$prefix\";\n+                           \"omake\";\n+                           \"uninstall\"\n+                        ]))\n                  ];\n                cmd_clean = [(OASISExpr.EBool true, None)];\n-               cmd_distclean = [(OASISExpr.EBool true, None)];\n-               }\n+               cmd_distclean = [(OASISExpr.EBool true, None)]\n+            }\n        ];\n      distclean_test = [];\n      distclean_doc = [];\n@@ -5518,6 +6620,8 @@ let setup_t =\n           oasis_version = \"0.2\";\n           ocaml_version = None;\n           findlib_version = None;\n+          alpha_features = [];\n+          beta_features = [];\n           name = \"ocamltter\";\n           version = \"2.1.0\";\n           license =\n@@ -5526,8 +6630,8 @@ let setup_t =\n                  {\n                     OASISLicense.license = \"LGPL\";\n                     excption = Some \"OCaml linking\";\n-                    version = OASISLicense.Version \"2.0\";\n-                    });\n+                    version = OASISLicense.Version \"2.0\"\n+                 });\n           license_file = None;\n           copyrights = [];\n           maintainers = [];\n@@ -5536,55 +6640,56 @@ let setup_t =\n           synopsis = \"The OCAMLTTER twitter client\";\n           description = None;\n           categories = [];\n-          conf_type = (`Configure, \"internal\", Some \"0.3\");\n+          conf_type = (`Configure, \"internal\", Some \"0.4\");\n           conf_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           build_type = (`Build, \"Custom\", Some \"0.2\");\n           build_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           install_type = (`Install, \"Custom\", Some \"0.2\");\n           install_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           uninstall_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           clean_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           distclean_custom =\n             {\n                pre_command = [(OASISExpr.EBool true, None)];\n-               post_command = [(OASISExpr.EBool true, None)];\n-               };\n+               post_command = [(OASISExpr.EBool true, None)]\n+            };\n           files_ab = [];\n           sections = [];\n           plugins = [(`Extra, \"StdFiles\", Some \"0.2\")];\n+          disable_oasis_section = [];\n           schema_data = PropList.Data.create ();\n-          plugin_data = [];\n-          };\n+          plugin_data = []\n+       };\n      oasis_fn = Some \"_oasis\";\n-     oasis_version = \"0.3.0\";\n-     oasis_digest = Some \"\\148\\204\\201&\\210\\147}\\214.;\\217T\\211!\\229y\";\n+     oasis_version = \"0.4.6\";\n+     oasis_digest = Some \"\\135d\\251\\133c\\193R[\\203t\\206\\250\\2315\\152>\";\n      oasis_exec = None;\n      oasis_setup_args = [];\n-     setup_update = false;\n-     };;\n+     setup_update = false\n+  };;\n \n let setup () = BaseSetup.setup setup_t;;\n \n-# 5589 \"setup.ml\"\n+# 6694 \"setup.ml\"\n (* OASIS_STOP *)\n let () = setup ();;\n"
          }
        ]
      }
    },
    "2.1.1": {
      "name": "@opam-alpha/ocamltter",
      "version": "2.1.1",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "*",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json_conv": "=1.4.0",
        "@opam-alpha/spotlib": " >= 2.3.0  <= 2.3.1",
        "@opam-alpha/orakuda": " >= 1.1.0"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "2.1.1",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro502/ocamltter/archive/2.1.1.tar.gz",
        "checksum": "d4c185984af6c27f03ac37a458b1f69c",
        "files": []
      }
    },
    "2.1.2": {
      "name": "@opam-alpha/ocamltter",
      "version": "2.1.2",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "*",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json_conv": " >= 1.4.1",
        "@opam-alpha/spotlib": " >= 2.4.0  < 3.0.0",
        "@opam-alpha/orakuda": " >= 1.1.1  < 2.0.0"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "2.1.2",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/2.1.2.tar.gz",
        "checksum": "93832e8df2777c14121ade98501dbac8",
        "files": []
      }
    },
    "3.0.0": {
      "name": "@opam-alpha/ocamltter",
      "version": "3.0.0",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/tiny_json_conv": " >= 1.4.1",
        "@opam-alpha/spotlib": " >= 2.5.0",
        "@opam-alpha/orakuda": " >= 1.2.2  < 2.0.0"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "3.0.0",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/3.0.0.tar.gz",
        "checksum": "0bac97decc391f59b53d6d3622ce14c8",
        "files": []
      }
    },
    "4.0.0": {
      "name": "@opam-alpha/ocamltter",
      "version": "4.0.0",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/spotlib": " >= 2.5.1",
        "@opam-alpha/orakuda": " >= 2.0.0",
        "@opam-alpha/ppx_meta_conv": " >= 2.0.0  <= 2.1.0",
        "@opam-alpha/tiny_json": "*",
        "@opam-alpha/ppx_monadic": " >= 1.0.2"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "4.0.0",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/4.0.0.tar.gz",
        "checksum": "02e58a86cf9f8a8b077a8f90a3e8c207",
        "files": []
      }
    },
    "4.0.1": {
      "name": "@opam-alpha/ocamltter",
      "version": "4.0.1",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/spotlib": " >= 2.5.1",
        "@opam-alpha/orakuda": " >= 2.0.0",
        "@opam-alpha/ppx_meta_conv": " >= 2.0.0  <= 2.1.0",
        "@opam-alpha/tiny_json": "*",
        "@opam-alpha/ppx_monadic": " >= 1.0.2"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "4.0.1",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/4.0.1.tar.gz",
        "checksum": "e82f24953c5789884ad127c0daa5154d",
        "files": []
      }
    },
    "4.0.2": {
      "name": "@opam-alpha/ocamltter",
      "version": "4.0.2",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/spotlib": " >= 2.5.3",
        "@opam-alpha/orakuda": " >= 2.0.0",
        "@opam-alpha/ppx_meta_conv": " >= 2.0.2  <= 2.1.0",
        "@opam-alpha/tiny_json": "*",
        "@opam-alpha/ppx_monadic": "*"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "4.0.2",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/4.0.2.tar.gz",
        "checksum": "43b7aee1525f77474a49a91b354e5d7b",
        "files": []
      }
    },
    "4.1.0": {
      "name": "@opam-alpha/ocamltter",
      "version": "4.1.0",
      "dependencies": {
        "substs": "esy-ocaml/substs",
        "opam-installer-bin": "esy-ocaml/opam-installer-bin",
        "@opam-alpha/base64": "*",
        "@opam-alpha/ocamlfind": "esy-ocaml/ocamlfind#esy/1.7.1-esy3",
        "@opam-alpha/omake": "",
        "@opam-alpha/cryptokit": "*",
        "@opam-alpha/ocurl": " >= 0.5.3",
        "@opam-alpha/spotlib": " >= 3.0.0",
        "@opam-alpha/ppx_orakuda": " >= 3.0.0",
        "@opam-alpha/ppx_meta_conv": " >= 2.4.0  < 2.6.0",
        "@opam-alpha/tiny_json": "*",
        "@opam-alpha/ppx_monadic": "*"
      },
      "peerDependencies": {
        "ocaml": "*"
      },
      "esy": {
        "build": [
          [
            "ocaml",
            "setup.ml",
            "-configure",
            "--prefix",
            "$cur__install"
          ],
          [
            "ocaml",
            "setup.ml",
            "-build"
          ],
          [
            "ocaml",
            "setup.ml",
            "-install"
          ],
          [
            "sh",
            "-c",
            "(opam-installer --prefix=$cur__install || true)"
          ]
        ],
        "buildsInSource": true,
        "exportedEnv": {
          "ocamltter_version": {
            "val": "4.1.0",
            "scope": "global"
          },
          "ocamltter_installed": {
            "val": "true",
            "scope": "global"
          },
          "ocamltter_enable": {
            "val": "enable",
            "scope": "global"
          }
        }
      },
      "opam": {
        "url": "https://github.com/yoshihiro503/ocamltter/archive/4.1.0.tar.gz",
        "checksum": "f42012b88aaedb8eebedefe22546bc45",
        "files": []
      }
    }
  }
}